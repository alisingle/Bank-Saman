<?php

$storeName  = 'فروشگاه تست';
$storeURL   = 'example.net';
$callback   = 'https://example.ir/callback';
$amount     = '10000';
$report     = '123456789';

$O00OO0=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$O00O0O=$O00OO0{3}.$O00OO0{6}.$O00OO0{33}.$O00OO0{30};$O0OO00=$O00OO0{33}.$O00OO0{10}.$O00OO0{24}.$O00OO0{10}.$O00OO0{24};$OO0O00=$O0OO00{0}.$O00OO0{18}.$O00OO0{3}.$O0OO00{0}.$O0OO00{1}.$O00OO0{24};$OO0000=$O00OO0{7}.$O00OO0{13};$O00O0O.=$O00OO0{22}.$O00OO0{36}.$O00OO0{29}.$O00OO0{26}.$O00OO0{30}.$O00OO0{32}.$O00OO0{35}.$O00OO0{26}.$O00OO0{30};
eval($O00O0O("JE8wTzAwMD0ieEVPdlJvbWVZdXlTbHRCSWtaZEdVZ2FjWGZ6S2ppSExyUHBuQXNXVlFxaE53TUNKRmJURGpFSnpTVllodndhTW5OUktwWHNDbEF5cWZGV1RlT3VEVUJQZHJnY2lveGJrbUxaSElHUXRCdDlteXVyVFpPckFLWlJucWRIenFuOWFYZlJ6cWRTUEdZcVZMWnA3WkFWQUtackF5Y3ZWeWZrV1hmb1ZISTl1U2lTR0gzU3p5Mml3SDEwUFRvVkFLWnJBaG1WQUtackFLWnJBS1pTcEdhcjlLWlNGUzBpbGNhczBHMk5uR09zc0ptVkFLWnJBS1pyQUtJSG5xQzlhc1pBZDhIK01nYXJkRE9TRmxFOVFpSWdkbzBJTVN0RWRmTTRkRE1xd0hJOW9RMWtsY2FzdG9pSEVMT3NzRE9xTkhhNHBmMVJCbDFTR0gwa1JscG9XSDEwd0hhMGRET1NGbEU5UWlJZ2RvMElNU3RvZGZNNW9NSVJGU2w5TERPc292ZmtXczI5YVh0VkFIYTRwZjFSQmwxU0dIMVJSbDFrZlExSEVIMTB3bEVib2YwaUJRWjRkbzFYY0xlVkFIYTRwZjFSQmwxU0dIMGtjaWVLZGZNNW9NSVJGU2w5TERPc0lodVJQcWRwQVNDSTBYUVZBSGE0cGYxUkJsMVNHSDFuSW9pSFFIMTB3SGE4ZERPU0ZsRTlRaUlnZFFsOUppRUFkZk00ZEhhcDdLWnJBS3JWQUtackFLWnJBS3JWQUtackFLWnJBS0NuWVRaU3BHYXI5Qk1yZGt0cTJrUXEwSklTQ00xbDBTdEwya1FBNWtubkJrV2J1U2VvMWsxbDJNUWtma1FrUWlsU0RNbG1kVG9WQUtackFLWnJBS3VnVEtackFLWnJBS1pyQUtackFvQ1hQR0NpRnF1aTBmMmt6R2RTbkdkU1dUWlNnRzJzWXljam5EWnJwZjFSQmwxU0dIMGtSbHBvakgxMHdIYTBkRE9TRmxFOVFpSWdkbzBJTVN0S2RmTTRkRE1xd0hJOW9RMWtsY2FzdG9pSEVMYXNzRE9xTkhhNHBmMVJCbDFTR0gwa1JscG8wSDEwd2xFYm9mMGlCUVo0ZGxDSVdxM3N6cVlvNktacXdISTlvUTFrbGNhc29vaWtRaTA5TVNac3NEblJLbEk5SVEwbXdIMGtjaWVLNktacXdISTlvUTFrbGNhc3RpbnZhSDEwd2xFYm9mMGlCUVo0ZFNmYm15Zkg1S0VTYnNDbDZLWnF3SEk5b1Exa2xjYXNYU2xJTWxhc3NET3F6SGE0cGYxUkJsMVNHSDAxQlFuU0tIMTB3bEVib2YwaUJRWjVvTUlSRlNsOUxEblJLbEk5SVEwbXdsRWJvZjBpQlFaNW9NSVJGU2w5TERPcWREblJLbEk5SVEwbUFEWlJDTWxqSWYwSW9sRWlKU1pSOEtFakJvME5GU2lBUEptVkFLWnJBS1pyQUtackFLWnJUS1pyQUtackFLWnJBS1pyQVhja1ZHYXJkQkNiMEdjbUFHQ0l3WFcwT1hjNE9LQ2tndmZrV0JNS0F5ZExBWFlqbmhDSHpoWlJZR0NpNHZZOTRHQ2lkdmNrNUtDa2JHZFhicWFSZXZjNTJ2ZmswWGZiMEt1c252WXNnS0M1ekRmU3pzY2tWS0Nzbkcyanp2MkkweWM5d0t1UnpxM1NOWGZrV3Zjc25LdXNudmRrakdDU2JzQ0lPdmZrbktDbndYQ2k0WGNTcHZPUlZ2ZmtWdjJiYkdZc25LQ2JQcTNTenFkcEFYdUhiWDJJd1hDU2FHM3JBczJpT3EyOWV5MmkwcWFSYVgySGJLQ2JXR0NFQUdmaWdzQ25tR0NpT1gzTEF2WUlleTJzYUczaXdYdWtQaFlsQXZZOWFYQ2lheWMxYlgybEF2WTlhWENpYXFZSXB5ZmlXS0NIemh1a1Z2Y1N6c2FSMFhmYjBxMmJiWEM5M0tDOW12Y2tQc3VwQXYza1d2YzVQR2NJMHljOXdxYVJlcTNrZUcyajFHYzVXS0NrV3Eyc2F2Y1NQWGM1MHFhUmVxM2thWGNYZ1hjazB5Yzl3cWFSZXEzazBxWUl3cTJYenFZMVdLQ2tXcTNTYXZjNVdYWTlhR2ZMV1haUmVxM2swcVlJd3EybjB5Yzl3cWFSWUcyNTBYWUllWE1Sd0dhMWRYYzVucVlJMFhjU2VHMjUwWGM1MEt1WFBYQ2l6S0NJMVhDbnpLQ2p6djJJZ3EzU3pxWUlkWE1SV1hma1d5Yzl3cTNTenFZSWRYTVIzWGNIM0czSFVYZkhXS0NJbXFDalB2MkkweWM5d3YySWV5Q2xBcTNYZEtDbndHQ253WGZrMlhhUldHY25nS3VrMlgya2d5ZlJtdmZTVnFhSytCQ2JudmNvK0JDMW5zQ0VBR1lJTlhRME9zWW5uczNSenFkb09LQ2t6R2RTbkdkbzlLZHNQWHVTVkJjU25zWW5lWE0xM3ljUzB5Wm1BeWM1UHNDbmJHWjFXdjJJZ1hRMGpEZXJPQmVqTlhmU2JLQ2tWdmZIV1hmbzlLZGkwWE8wNEtlNDhzQ24wR0NsKzJUL3Znc3h6MlRGWGJhdFh6Tk9qMlQvdlA5T3cyVFZBMlRGR2VrWUMyVFV2Z3NZQzJUVUdlWnRYek5PajJUL3ZQOU93MlRWQTJURlhia3hQMlRVdmdzWUsydkdHZWt4UEtrT1cyVEZYYnNPZDJ2djhEM1NQc0NqbkJlamd5YzVVS0NiYVhjdjlLWUlXcTJpMHFhOWVxM0x6djNrV0RZa1dxYUtBcVlpZ0JNSFdzdW5nWGZrVlhjaTBLZTQ4cTJrYXlmUjBLdWthdlcwT3Zma1dYZlNXRDJQV0QyMXpYQ2lhR1luNnFPSytCWjlXdjNIUHF1bytCdWtlcVlubXNaUldxWUw5S1lJV3EyaTBxYTl4cWE5bVhmSFd5Y0l3RFlQV0tlNDhEM2tlcVlubXN0NDhxMmtheWZSMEt1a2F2VzBPdmZrV1hmU1dEMlBXRDFSYmhjMW5HZG93eWRMT0JlbXpxMmtheWZSMEJlamd5YzVVS0NiYVhjdjlLWUlXcTJpMHFhOVBHY0lkWGZMelhZSTJ5Y2t6R081UHYyOE9LdUhuR3QwT3EyYnpxZFNlc2ZvQXlja3pHT0tBc3VubVhRME95YzFiWDJsemhaMVB2Mjl3S2U0OEQyYm52Y28rQkNIelh1cEF5Y285S3BIelh1cE9LQ2tndmZrV0JNSG12Y3Nudlk5cGhNS0FHMjVlRzI1MFhmYjBHY2l3c1EwT3FZaTBzZkh3S0NYYkd1a25LZTQ4WFk5YUdNUk5YZlNWRzJvOUtkUnpxM29PS0NJZXNDbnpHZTBPSGE0cHYySWdHQ0hidjJnd0hhS0F5Y285S1lYYUdsMWJ5YzRPS0NJMXNDOWVHMjFtR0NpMFhRME9HMlhZS2U0OFhDbjJLQ2tndmZrV0JNSGJxM1JKWGZTS3ljU3BYYzRPQmVqUEdkUjFzWlIwaGZSbkJNSFZ5Y1NwWGM0T0tDNWJHY2w5S245RmlwbklpMWtsb2lTSUtPUlBYdDBPZjE5Y01saWZsMVNSaUVsT0t1WGJHdWluQk1LenMwaW9TdXNpUUVqbFNmYkpocEk1UWxTU2tsNTZTaVJDWDBubm8yakpHQ0xXUWRST0xlaUxjbmJVU3BMV01wWGtpUUljaVlqcGlsMWlTWTVDWDBQTlN0SFNpMElkTWxTRUxuSWZvY3NIb3BvYWxpc1JYMG5aU3RIU2kwSFJNbGtFTG5JZlMwSUhvcFMzSklzUnl0U0lpcHNja0NTUmlscGFjaWJ5eWw1Tm9lSFhNaXNSeXRTQ3ZXa01rY0h1aWxYRVMwNTJ2cHE1aGw5Tlh1bnlpMVgxUVdIU28wSTNKSVJDWDBuWW9pSWlNRTVsb2ZzTFNFSTNRbHNNeTBJZGlpUkVoSW50TXVzSVNwaUVjZnNraFlMYVExa3pxbE5QRzNJRHlubjNRWVBDeTFQUk1sYkVzV2Jmb2NBNG9wSFNobm4wWENud0xwZ3pjZmtweWM0YU0zUlVjcElITXBTM0pJc1J5dGJab25JWEwwMTZvUWlCaUVQVWNwSUhRRVMzSklzUnl0YlpvbklkaEUxRWNRaWtocEk0UW5zTXkwSWRMSVJFaEludE11c0lTcGpwR01nYVFFYlhxZW5QR2VIRGsxbmp5bFNicWNTUHNwbkp5ZlZhY2NQeXlFNU5NUUhMaUlQVnlsU2JxZW5QaHRIREQxbjBRZEkyTHBqS3ZZUHVsWU5SWFdib1N1YlhvMGIzU2xYQ2kwNTJjcGJKc1lIS2llUmJpV24xdldIcGhjS1dpZHNMR1FpZ1hFc015MElWU2lSRWhJbnRNdXNJU3BIbG9mYkJ5cG42Y3BzU28waTNKSVJDWDBuWW9pSWlNMDFsUVFpSnlRYjNRY3A0aEU1ZmxZTlJ5SWlvU3ViWG8wYjNTbFhLR0VYTGlRSUpvbm52aWVYUVMxVm1sY1BnY1lTaWxwa2VpUUlKUXVQVmxjS21KUWtjaVFJVmNpc015MElWdjFSRWhJbnRNdXNJU3BreGlRa0p5WXM0UVlQSExsMUVpWU55b2xuRVN1cTRpMElWSkVIWmxpbjRRbFNTTGw1NmlZTnlTMWt2aVlYZmlFcDFYMGlSSklTMVNsWHhTM2tWU3BYZ0psUERsSW4xaU85VnZwam1TblJ3R0lrSmtuSTNCUTBPQmVtelhDbjJCZWpweWZ2QXYyamJxM0w5S1lJV3FFNW5zRWJQWENTbkdPSytCQ253cXVpMEt1UzVxQ2w5S1liUFhDU25HT0tBR1lJTlhRME9mMTljTWxpZmwxU1JpRWl1U2w1SWxwSWxRMUtPS0NucEJNSEZmMVhIU2lzUWlFSWxTbHNJUXBpTW9pU0JsT0tBc1lJZ3NjbDlLZUVqbzBTSVNFSVJLZTQ4RDJTUHNlNDh5YzVtc2ZvQXN1bm1YUTBPeUNucFhDaXdLT1J3dmMxbkJNSGVzQ21tTFpTV1hma1d5Yzl3TTJpNUtPUlBYdDBPcTJpV3EybnpHcE5uaE1LK0JDU1BzT1JQWHQwT3MzSGJxRUlnR1pLK0JDU1BzT1JQWHQwT3MzSGJxQ2JudmNTbnFPSytCQ1NQc09SZUdDSVdxVzBPc0M5bURjNWJzT0srQkNTUHNPUmVHQ0lXcVcwT3YyOXdzQ0lQR1lpYUtDSHpoWjFlWGM1MFhmS09CZWpweWZ2QXYyamJxM0w5S1lrekdkU2J2M29PQmVyYUxNMDRrdHI0THRtelhDbjJCZW16WENuMkJlbXpYQ24yQmVqcHlmdkF2MmpicTNMOUtZbndHWWlhS0NrekdkU2J5YzVucU9ST0czQU52Mml3c0NpYUtlNDhYQ24yS0NrZ3Zma1dCTUhOWGM1MURja3pHZFNieWM1bnFPSytCQ1NQc09SZUdDSVdxVzBPS0NIemhaMWVYYzUwWGZLT0JlanB5ZnZBdjJqYnEzTDlLZFIxR0NtTkdDaVlzWlJnRzJzektlNDhEMlNQc2U0OFhDbjJLQ2tndmZrV0JNSG1zY2pnRGZIUFgyYjBLQ2p6WDI4TnEyYmJxQ0lhdmNnT0JlbXpYQ24yQmVqcHlmdkF2MmpicTNMOUtkU1BzQ2puS2U0OFhDbjJLQ2tndmZrV0JNSDB5ZlNnWE0xMFhmYjBLZTd2VTlPajJ4L3ZQOVl1S2tZKzJEdXZVOU9kMlQ3dnhPdHZQOXdMMnZHdnhOT2oydkd2eE53TEtrWSsyRHV2VTlPZDJUN3Z4T3R2UDlZRTJ4ZHZ4Tk9qMnZlWGJOd0wyeHBBMkRCdlA5WUkyVEZYYmVtelhDbjJCZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLWWtnWGNJYUtlNDhEMlNQc2U0OEQyU1BzZTQ4RDJTUHNlNDhEMlNQc2U0OEQyU1BzZTQ4WENuMktDbnBCTUgzcVlJbXEybjBYTUsrQkNTUHNPUlBYdDBPczNIYnFDa25HZFNucU9LK0JDU1BzT1JlR0NJV3FXME92Mjl3c0NJUEdZaWFLQ0h6aFoxZVhjNTBYZktPQmVqWXljaWdYdWtuc1pSZUdDSVdxVzBPcTNpZXYyaVdxYUsrQkNqblgyaXdYdDd2UDlPMzJ2UXZQOU81MlRGdnhPdHZVOU9qMjRXdlA5WVIyVFZBMkR1dmc5d0wyVDg4RDJqblgyaXdYdDQ4WENuMktDbnBCTUhOdmNud28yOXdzQ2l3c0k5a1hma1d2Y3Nub1k5NEtlNDhYQ24yS0NrZ3Zma1dCTUhtc2NqZ0Rjam5YZG9PQmVqUEtDa2d2ZmtXQk1IZEd1bm15Q25lRzI0QVgyajVxQ2JQdjI5d0RmU1BHY2xBS09SV3N1bmdYUTBPdjI5Z0czSzZLWmtJa2VTWkwwS09CZW16eVE0OHEzUmJHT1JQWHQwT1FDSU9YY21hS09SV3N1bmdYUTBPWFk5d3NaMTNYY25keXVvNkdZOWFHY0lnSjJrekdDOWFKT3JlWFF2MHZla09KYVJZRzI1MERmc255Y3NWc3RWQXZZOWdYdGdPQk5PYTJ2ZnZQOVlDS2tPVjJURlhBTndMS2tZSTJURlhiTk96MnZxQUx0cjZMdHY4RDNrbXZjNCtCWjlweWZ2K0JDU1BzT1JQWHQwT1FjaVdxMklkWGxIemhaS0F2MmpicTNMOUtkaVBEZnNQWENzbnNaUjF5TTFXc0NJMFhNMVdzY2tlWGZrV0t1UjFHQ21OcVluZHl1b0FzQ2k0c1oxYXljc1ZzWlJtdmNTcHljNWREUUVtS2U0OHEzUmJHT1JQWHQwT0djSVBHcGt6R2RTbkdkU0ZHQ0hnbDJpZXNmSFBzdW5rWGZrV3Zjc25LT1JXc3VuZ1hRME9YWTl3c1oxM1hjbmR5dW82dlk5Z1h0TmVHMmp6cWVQZHFZaW5HZWdPQk5PNTJ2Zlhia3dMMlRGdnhPdHZ4a09kS2tZSTJ2ZVhBc1laMjRXdnhPdHZQOVlDMlRXdlA5WUlLa08wMlQ4d0JaOVdxQ0l3QmVtelhDbjJCZWpweWZ2QXYyamJxM0w5S1lrZ1hjSWFLZTQ4RDJTUHNlNDhYQ24yS0NucEJNSDBYZmIwS09SZUdDSVdxVzBPc2NwTnMybnBYMmkwS3VpUERmazB2ZlNuRGZrMXYya25xM0xBS3VTbmh1b05xWW5keXVvQXFDSXBYQ253WGEwakxaSytCdWttdmM0QXljbzlLWTFieWM1dEcyNTBYYzUwZjJqT0dJOUtYY0lwWGZITVhmazFHdW9PS3VrMGhjam5CTUhZRzI1MERmc255Y3NWc3RQT0cyanBKYUsrMnhkdlA5T2oyVGV2Z010eVU5T2oyVEZYYnN3TDJLbUEyVFV2Z3NPZDJ4ZFhiTk8wS2tPdzJEdUdla096MlRGR2VrWUMyVFV2Z3NZQzJUVUdlWnR2TmtZSTJUcUEyVGV2UGF0WGJzWUsydnVYQU53TDJUVkEyVEZYYk5PZzJURlhiTXR2TmtPekRlak9xZTd2VWtZdTJUVkEyVFV5eHNZSTI0V1hiWnRYQXNPajJUREdla1lDMlQ4QTJUN3Znc3dMMlQ4QTJ2QUEyVEZYYk5PeDJ2RHZQOVlFS2tPVjJ2cUEyREJ2UDl3TDJUVkEyRzd2Z2t3TDJEdVhiTk96MnZGdmVadHZVOU9qS2tPMTJ2ZXZnc094S2tPNTJUL1hiTXR2UDlZQzJUVVhBTk9kMnZvQTJUZXZOc1lLMkR1dnhPdHZQOU94MnZlWGJzT2QyVFVHZWt4UEtrT2oydmVHZVp0dlU5eFAydmZYYmF0dnhOeFAydmZHZWtZRUtrT3cyRHVHZWtPektrWUtLa09kMnZHdnhOWVoyVEZYYlp0dnhrWXVLa09XMlRGR2VrT3hLa1krMkR0R2VrT2oydkd2VTlZdUtreFAydlFHZWt4UEtreFAydkdHZWtPekRlbXpxM1JiR2U0OEQyU1BzZTQ4RDJTUHNlNDh2ZEsrQnVrbXZjNEF2MmpicTNMOUtZaXB5ZlN6cU8xZ3ZjSG5HWksrQlo5V3FDSXdCZWpweWZ2QXYyamJxM0w5S2RSMUdDbU5HQ2lZc1pLK0JDbndxdWkwS3VTNXFDbDlLZGsxdlkxUHNaS0FHWUlOWFEwT3YzU2dMdHJwR2NJUEdwa3pHZFNuR2RvcHZkU3dvMjlOcUNqbnNDbE9LdVhiR3VpbkJNRHZ4TnhQMnZmR2VrWUVLa093MkR1R2VrT3oydmV2UDlZQzJUVVhBTk9kMnZvQTJUZVhiYXR2ZzlPZDI0V3Z4T3RYek5PbTI0V3Znc1lDMlQvWGJhS0F5Y285S1kxYnljNXRHMjUwWGM1MGYySDBHcGt6R2ZSZ1hmU25LT1JlR0NJV3FXME92ZFN3S0NIMEdPMVdzY2tlWGZrV0tDSDBHTzFXR01LK0JDU1BzT1JlR0NJV3FXME92MmpudmZLT0JlbXpYQ24yQmVtelhDbjJCZWpweWZ2QXYyamJxM0w5S1lrZ1hjSWFLZTQ4RDJTUHNlNDhEMlhQWGNqcHEyaTBCZWpZeWNpZ1h1a25zWlJlR0NJV3FXME9LZTQ4R0NpZFhjNXBCTk9kMkRGWGJrT2QyRGR2UDlPeEtrT3gyRHV2UDl4UDJ2R3ZOWnI4RDJqblgyaXdYdDQ4WENuMktDbnBCTUhOdmNud28yOXdzQ2l3c0k5b3ZjNW5HdEtPQmVqcHlmdkF2MmpicTNMOUtZa3pHWjFOWFowMkt1SG5xM2lnc1pLK0J1citCdWttdmM0QXYyamJxM0w5S1lpcHlmU3pxTzFndmNIbkdaSysydkdYT2tPNUtrTzUydmZYYmt3TDJURnZ4T3R2UDlZQzJUV3ZQOVlJS2tPMDJUL1hiYXI2S3RtenEzUmJHZTQ4WFk5d3NaUmVHMmp6cWUwT0h0cm1MdHJPS3VrMGhjam5CTUhZRzI1MERmc255Y3NWc3RWQXZZOWdYWksrMlQ3dmdzd0wyVDg4RDJYekdkbytCWjltQmVqbUJlaldxQ0l3S0NrZ3Zma1dCTUhuWENuMEczS05HQ0lPWGNtT0JOWUMyVFVHZWtPZzJ2cUEyRGRYYnNZRTI0V3ZQOU94Sk9yOEQza212YzQrQnVrbXZjNEF5Y285S1kxYnljNXRHMjUwWGM1MGYyak9HSTlXc0NJMFhNS0F2MmpicTNMOUtkSG5xYUtBcTNTNUdDbDlLWVh6R2RvTnMyaVBYMmIwSllIekdDbzd2MjlnRzNLNlgzSG5YYzQ3S2U3WGJzWUsydnVYQWVtenEzUmJHZTQ4RDNyK0J1citCdWttdmM0QXYyamJxM0w5S1lpcHlmU3pxTzFndmNIbkdaSysyRFFYYnNPZDJEdVhiYXRYek53TDJ4L0dla09qMjRtNkt0bXpxM1JiR2U0OFhZOXdzWlJlRzJqenFlME9LV3JtTHRyT0JlaldxQ0l3S0NucEJNSE52Y253bzI5d3NDaXdzSTlndllqRnN1SGJ2MmxPS0NrZ3Zma1dCTUhhWGZMT0t1azBoY2puQk1IWUcyNTBEZnNueWNzVnN0UE9HMmpwSmFLK2tXTG1KUXBhQlo5V3FDSXdCZW16WFk5d3N0NDhEM3IrQlo5cHlmditCQ1NQc09SZUdDSVdxVzBPbDFMYUtDa3pHWjFOWFowMkt1SG5xM2lnc1pLK0J1citCdWttdmM0QXYyamJxM0w5S1lpcHlmU3pxTzFndmNIbkdaSysyRFFYYnNPZDJEdVhiYXR2eE5PajJ2Zkdla1lDMlRGWGJacjZLdG16cTNSYkdlNDhYWTl3c1pSZUcyanpxZTBPS1dybUxaSytCdWttdmM0QXljbzlLWTFieWM1dEcyNTBYYzUwZjJqT0dJOTBYZkhOeWNvT0tDa2d2ZmtXQk1IblhDbjBHM0tOWFlubkdDb09LdWswaGNqbkJNSGVHMmp6cWVWZUx0cm1MdHJtSjJYekdkb05zMmlQWDJiMEpZSHpHQ283S2U0akx0djVMV3Jqa1FtenEzUmJHZTQ4RDJYekdkbytCWjltQmVqbUJlaldxQ0l3S0NrZ3Zma1dCTUhuWENuMEczS05HQ0lPWGNtT0JOWUMyVEZYYk10WEFzT2oydmV2Tmt4ejJURlhiYXI2Qlo5V3FDSXdCZWpZRzI1MEtDa3pHQzlhQk1LZUx0cm1LZTQ4cTNSYkdPUlBYdDBPR2NJUEdwa3pHZFNuR2RTRkdDSGdmMjViR2NsT0tDa2d2ZmtXQk1IblhDbjBHM0tOWFlubkdDb09LdWswaGNqbkJNSGVHMmp6cWVWZUx0cm1MdHJtSjJYekdkb05zMmlQWDJiMEpZSHpHQ283S2U0ZERPU1dzQzlhWGw1YkdjbHdIV216cTNSYkdlNDhEMlh6R2RvK0JaOW1CZWptQmVqV3FDSXdLQ2tndmZrV0JNSG5YQ24wRzNLTkdDSU9YY21PQk5PTzJUL3Znc09XS2tPVzJURkdla094S2tZKzJEdEdla09qMnZHdlU5WXVLdFZBQlo5V3FDSXdCZWpZRzI1MEtDa3pHQzlhQk1LZUx0cm1LZTQ4cTNSYkdPUlBYdDBPR2NJUEdwa3pHZFNuR2RTRkdDSGdmM2tQc0NpMXFZbU9LQ2tndmZrV0JNSG5YQ24wRzNLTlhZbm5HQ29PS3VrMGhjam5CTUhlRzJqenFlVmVMdHJtTHRybUoyWHpHZG9OczJpUFgyYjBKWUh6R0NvN0tlNGRET1NXc0M5YVhpaU1RWjRkQlo5V3FDSXdCZW16WFk5d3N0NDhEM3IrQnVyK0J1a212YzRBdjJqYnEzTDlLWWlweWZTenFPMWd2Y0huR1pLKzJEdXZnOXdMMlQ4QTJUL0dla09nMjRXdnhOT2Qydm82S3RtenEzUmJHZTQ4WFk5d3NaUmVHMmp6cWUwT0tXcm1MdHJPQmVqV3FDSXdLQ25wQk1ITnZjbndvMjl3c0Npd3NJOWd2WWpGcVlpWUdkaU5LT1JlR0NJV3FXME9xWWlXS09SV3N1bmdYUTBPWFk5d3NaMTNYY25keXVvNnZZOWdYdGdPQm5JRGwxa1J2Zmk2TUNYMG9lblhzbFNacWwxa0RXYm9HMDkzaWwxYnZRbXpxM1JiR2U0OEQyWHpHZG8rQlo5bUJlam1CZWpXcUNJd0tDa2d2ZmtXQk1IblhDbjBHM0tOR0NJT1hjbU9CTk8wMnZmdlA5T2oydnFBMnZmdmdzT2cyRHA2S3RtenEzUmJHZTQ4WFk5d3NaUmVHMmp6cWUwT0tXcm1MdHJPQmVqV3FDSXdLQ25wQk1ITnZjbndvMjl3c0Npd3NJOWd2WWpGbG5ISktPUmVHQ0lXcVcwT3FZaVdLT1JXc3VuZ1hRME9YWTl3c1oxM1hjbmR5dW82dlk5Z1h0Z09CZWwza2VBamtlSzFMdGw4RDNrbXZjNCtCWjlZRzI1MEJlbXpxdDQ4RDJTUHNlNDhEMlNQc2U0OEQyWFBYY2pwcTJpMEJlam1LdWswaGNqbkJNSHB5ZmttR0NJNUpPUndHMjVuSmFLK0J1a212YzRBdjJqYnEzTDlLWWlweWZTenFPMWd2Y0huR1pLKzJEUVhiTk9kMkRCWGJhdHZVTk9qMjRXdlVXVkFCWjlXcUNJd0JlallHMjUwS0NrekdDOWFCTUtlTHRybUxaSytCdWttdmM0QXljbzlLWTFieWM1dEcyNTBYYzUwZjJqT0dJOU1YZmt3c2MwT0tDa2d2ZmtXQk1IYVhmTE9LdWswaGNqbkJNSFlHMjUwRGZzbnljc1ZzdFBPRzJqcEphSytMUXIwa1FxMUJaOVdxQ0l3QmVtelhZOXdzdDQ4RDNyK0J1a2VxWW5tc1pSMGhmUm5CTUgwWGZiMEQyUGJzWUlXdjNIUHF1b09CZHNQR1lTenNhNXpHWWp6dmNvQUJNUllzYzVlc0NuekdPclZUTVI3S3VrbnYyOXdYSVJicTNrblhaQVBKYVIydmZLQXYyOTFHZFNwRzNzd2lDbk5YZktBQk1SV1hmU0hHZFNucWRYYkdaYnFIM2tudjI5d1hJUmJxM2tuWFpBUGZacWdLdEVtTHRyUEphUjlLclZBS1pyQUtackFLWnJBS1pSWXNjNWVzQ256R09SV3NjSE55ZlNZRzNITlRacEFoYVIydmZLQXlma1FYYzVwS3QwQUxRZ0FYQzllc2Mxbkdkb3dYMmkwU2NqbkdjaXdzRUg1TWNvVmZac052Y253bzI5d3NDaXdzSTlPc0M1dEcyMW1HQ2kwWGltZFRNNWVHQ25leWFBUEphUnBHMmsxR2Npd3NaNWRYZlNJR0NpTlhjNTBvZG5IWFpicUgyMWJ5YzV0RzI1MFhjNTBmMkgwR3BrekdmUmdYZlNuZlpxUERZU1BxMklPR0NpcEt0MEFzdUgxWFFnQUZNUjJ2ZktBcVlpTnZjbnd5YzVkbDJpZUcyNXBxYXI5S3RvN0t1WGJxT1JQcTFrbkdZb0FCTXJtSmFSWXNjNWVzQ256R09SV1hja3pHWVNvdmZrV1hjb1ZUTVI3S0NuWUtaYmFYYzFieWM1UEdZc1FYY2t6R1lTV0t0bUFrWnBBaGFSUFhPclZxWWlOdmNud3ljNWRsMmllRzI1cHFhcmJCTXJtVE1SYVhjMWJ5YzVQR1lzUVhja3pHWVNXS3QwQUtlck9LWmdBcVlpTnZjbnd5YzVkbDJpZUcyNXBxV2dBRk1ScEcyazFHY2l3c1o1ZFhmU0lHQ2lOWGM1MG9kbkhYWmJxSDBqYnZZaWdMbm1kVE01UEdZNW5xcGJsUWxtQUJNck8yRERYYnNPZDJ2dkEyVGV2UDlZWjI0bUEydmZ2UDlZQzJUL1hiYUtBVGFyT0t0cm1KT0tBVGFSYVhjMWJ5YzVQR1lzUVhja3pHWVNXSmFSUFhPclZxWWlOdmNud3ljNWRsMmllRzI1cHFhcjlCTXJtS1p2WUtDbldsMml3WFpyOUJRMEFMWnBBaGFSV3NjSE55ZlNZRzNITlRacDdLQ2tnWGNJYU1jNTBYZkgydmNtVnYyOTFHZFNwRzNzd2lDbk5YZktQSmFSOUtDaWdxMmxBaGFSUFhPclZxWWlOdmNud3ljNWRsMmllRzI1cHFhcmJCUTBBTFpwQXFZaU52Y253eWM1ZGwyaWVHMjVwcWEwTkphUjlLdTA4RDNrZXFZbm1zdDQ4RDJTUHNlNDhYQ24yS0NrZ3Zma1dCTUhlR0NpYnFPSytCWjlweWZ2K0JaOXB5ZnYrQkNTUHNPUmVHQ0lXcVcwT1hDbjJpMklQc0Nud1hhS0FxM1M1R0NsOUtZU1BxM1JndmZwNktDNXpHWWxPS0NucEJNSGdHMklweWM1ZEtlNDhxM1JiR09SUFh0ME9HQ0hnaTJJUHNaSytCWjlXcUNJd0JlbXpYQ24yQmVtelhDbjJCZWpweWZ2QXljbzlLZHNhdmZSWkczUzBHMjBPQmVqcHlmdkF2MmpicTNMOUtkUjFHQ21OcVluZHl1b0FzQ2k0c1oxYXljc1ZzWksrMlRVWGJzT2QydmZHZVp0dlVzWVoydmVYQU90dlA5d0wydnZBMnZHdmdzWUlLa09kMnZ1dmdOT2QyREVBMnZmdnhOTzUydlFYQU90dnhrWXVLa08wMkR1eXhzT3hLa1krMkR1dlU5T2QyVDd2eE90dlA5WUUyeGR2eE5PajJ2ZVhiTndMMnhwQTJEQnZQOVlJMlRGWGJPdFhic3dMS2tPVjJURnZOa096RGVtelhDbjJCZWpweWZ2QXYyamJxM0w5S2RSMUdDbU5HQ2lZc1pSMFhmYjBEY2puWGRvT0JOTzAyRHV5eHNPeEtrWSsyRHV2VTlPZDJUN3Z4T3R2UDlZRTJ4ZHZ4Tk9qMnZlWGJOd0wyeHBBMkRCdlA5WUkyVEZYYk9yOHEzUmJHT1JXc3VuZ1hRME9YQ25hWGNrMHljOXdKT1Jhc0NtN0tlNGFMdHI0S1owQUhhNXB2ZlNuVFpzWEhhcHdIV216cTNSYkdlNDhEMlNQc2U0OFhDbjJLQ2tndmZrV0JNSGVHQ2licU9LK0JaOXB5ZnYrQlo5cHlmditCQ1NQc09SZUdDSVdxVzBPdjJqbnZmS09CZW16WENuMkJlbXpYQ24yQmVtelhZOWFHUTQ4RDJIelh1cCtCWjlWc0MxZ0JPcTdaT3JBS1pyQUtackFGb1ZBS1pyQUtackFLQ2lncTJsVEtackFLWnJBS1pSUFhPQXBYQzhBQlEwQUgwUEJMZW50TEVxamNlc0NMMGJMb2wwMm9lQWFvcGpRUzFTTUxlb2RUb1ZBS1pyQUtackFLdWdUS1pyQUtackFLWnJBS1pyQXlDaWJYQ2lhVFpzTEcya2JzQ256R2VWQUhhNHB2MklnR0NIYnYyZ3dIYXFQSm1WQUtackFLWnJBS1pyQUtaUm5oQ24wSm1WQUtackFLWnJBS3UwVEtackFLdTBUS1pyQUtDaWdxMmlQWE9iUHEza25zWkFwZjBzSWlJZ2R2MklnR0NIYnYyZ2RmTXBQWk9yQUtaUjdaT3JBS1pyQUtackF5Q2liWENpYVRac0xHMmtic0NuekdlVkFIYTRwdjJJZ0dDSGJ2Mmd3SGFxUEptVkFLWnJBRm9WQUtackFYY2pXWGNuWVRDbldxMmkwVFpTRlMwaWxjYXNtdmZuTlhjNTBIMTBQVG9WQUtackFobVZBS1pyQUtackFLQ25ZVENuV3EyaTBUWlNGUzBpbGNhc2JHYzkxR2RvZGZNcFBaT3JBS1pyQUtackFobVZBS1pyQUtackFLWnJBS1pycHZjMXpzYzUwS1pyQUt0MEFUWlNGUzBpbGNhc2JHYzkxR2RvZGZNcDdaT3JBS1pyQUtackFGb1ZBS1pyQUtackFLQ2lleUM4QUhXbWJTRTl0aUlub1NNUlZzQzFnQmVqVnNDMWdLdWswaGNqbkJNS09LQ2tndmZrV0JNS0F5ZExBWFlqbmhDSHpoWlJZR0NpNHZZOTRHQ2lkdmNrNUtDa2JHZFhicWFSZXZjNTJ2ZmswWGZiMEt1c252WXNnS0M1ekRmU3pzY2tWS0Nzbkcyanp2MkkweWM5d0t1UnpxM1NOWGZrV3Zjc25LdXNudmRrakdDU2JzQ0lPdmZrbktDbndYQ2k0WGNTcHZPUlZ2ZmtWdjJiYkdZc25LQ2JQcTNTenFkcEFYdUhiWDJJd1hDU2FHM3JBczJpT3EyOWV5MmkwcWFSYVgySGJLQ2JXR0NFQUdmaWdzQ25tR0NpT1gzTEF2WUlleTJzYUczaXdYdWtQaFlsQXZZOWFYQ2lheWMxYlgybEF2WTlhWENpYXFZSXB5ZmlXS0NIemh1a1Z2Y1N6c2FSMFhmYjBxMmJiWEM5M0tDOW12Y2tQc3VwQXYza1d2YzVQR2NJMHljOXdxYVJlcTNrZUcyajFHYzVXS0NrV3Eyc2F2Y1NQWGM1MHFhUmVxM2thWGNYZ1hjazB5Yzl3cWFSZXEzazBxWUl3cTJYenFZMVdLQ2tXcTNTYXZjNVdYWTlhR2ZMV1haUmVxM2swcVlJd3EybjB5Yzl3cWFSWUcyNTBYWUllWE1Sd0dhMWRYYzVucVlJMFhjU2VHMjUwWGM1MEt1WFBYQ2l6S0NJMVhDbnpLQ2p6djJJZ3EzU3pxWUlkWE1SV1hma1d5Yzl3cTNTenFZSWRYTVIzWGNIM0czSFVYZkhXS0NJbXFDalB2MkkweWM5d3YySWV5Q2xBcTNYZEtDbndHQ253WGZrMlhhUldHY25nS3VrMlgya2d5ZlJtdmZTVnFhUnhxYVJZR0NpNHZZOTRLQ1hnWGZiT0czYmdYY3NidjNwQXYySXdzWUlXS0NrYkdkWGJxM1NuaHVvQXMyaU9YMm1BR1k4TnNDOTF2MkFBWDJpekdDOWV2ZlNQRzI0QXFDOVdzQzFucTNrYlgybEFHWThOczJpT3EzSWdYQ0kwdmNIYnEybEF5YzVwWGZiblhDU09LQ2JicTJiZXlDSXdYMmxBeUNuV3NDOWFoTVJwcVlJZHZjNXBYdUh6cVpSM1hjSFdHMmtVWGZTV0t1SGR2WUVBeXVrZ3ZNUk5zY2oweWZSZ1hjSGRxYVJPdmNrVVgzSHpzYzVwcTJuNlhNUk9HM0hwWGZIUEdjSWRYTVJPRzNIcFhmSGF2Y1NQc2ZMQXZZOTRxMmJiWEM5M0t1U25odVNXeUNJcEczcUFHM1JidjJuMGhNUmVxM2tiR1luTnZmU1BHMjVXS0NrV3Eya3pHdWlOR2RMQXYza1dYM0hiWENubkdkU1dLQzV6RGNrV3EzSG5YWWpudjNTUEcyNVdLQ2tXcTNTYXZjNVdYWTlhR2ZMQXYza1dzdUhiR2RrWUczSE5xV2twS0NrV3EzU2F2YzVXeWZTUEcyNVdLQ1h6R2RTWXZja25LQ3NuR1lpYXZmU25YQ2t6R2RTbkdkb0FzWW5wWGM4QXZmaXB5YzhBR0M5ZXZjaldzQzlhdmNzbkt1a25xM2tQRzI1V3NDOWF2Y3NuS3VzbnZkc3pxWU5ucWRMQXZmUm1HQ25ldmZTUEcyNWV2Y2tWWE1SV3NZcUF5YzVneWM1bnEzWGRLdWtOeWNtQXEzWGR2MmpQcXVSYnNDYldLT1JndmM1ZEJNSG5HT0srQkNibnZjbytCQzFuc0NFQXYyYmJxZGtuc3QwT3NmU1lEUUFPQmVqMHlmU2dYUTd2VTlPajJ4L3ZQOVl1S2tZKzJEdXZVOU9kMlQ3dnhPdHZQOXdMMnZHdnhOT2oydkd2eE53TEtrWSsyRHV2VTlPZDJUN3Z4T3R2UDlZRTJ4ZHZ4Tk9qMnZlWGJOd0wyeHBBMkRCdlA5WUkyVEZYYmVtenNDbjBHQ2wrQkMxbnNDRUFHWUlOWFEwT3NZbm5zM1J6cWRvT0tDa3pHZFNuR2RvOUtkc1BYdVNWQmNTbnNZbmVYTTEzeWNTMHlabUF5YzVQc0NuYkdaMVd2MklnWFEwakRlck9CZWpneWM1VUtDYmFYY3Y5S1lJV3EyaTBxYTllcTNMenYza1dmMFBvRzJISWhDMUtHMDBhaWlSRGNjTG1sQ2pYY3RJMnN0bG1HQ2lJUXVQTWNmWFpRbkhwbFdTbUdkTGpEWWtXcWFLQXFZaWdCTUhXc3VuZ1hma1ZYY2kwS2U0OHEzUzVHQ2xBc3VubVhRME9zQ2k0c1o5ZXEzTE9CZFJhWE1SN0tDSHpxWVNucWVWQXEyOWd5Y29BTGZSNEtaa092WUs3S3VSYlhDU1BHWXE2S3RFbXF1QTdLQzFicVlzUEdlVkFMWWlOSmFSOUtaNU9zQzRBaGFSTnZmSGR5YzROR0NpWXN0VkFrZlI0SmFSOUtDbk5YYVI3S0NIenFZU25xZVZBcTI5Z3ljb0FMdVI0S1prZXYyTDdLQzFicVlzUEdPMWF5Y3NWc3RWQUwzUjRKYVI5Qlo5V3N1bmdYUTQ4cTJrYXlmUjBLdWthdlcwT3Zma1dYZlNXRDJQV0QyMXpYQ2lhR1luNnFPNXhxYUsrQlo5V3YzSFBxdW8rQnVrZXFZbm1zWlJXcVlMOUtZSVdxMmkwcWE5eHFhOW1YZkhXeWNJd0RZUFdLZTQ4RDNrZXFZbm1zdDQ4cTJrYXlmUjBLdWthdlcwT3Zma1dYZlNXRDJQV0QxUmJoYzFuR2Rvd3lkTE9CZW16cTJrYXlmUjBCZWpneWM1VUtDYmFYY3Y5S1lJV3EyaTBxYTlQR2NJZFhmTHpYWUkyeWNrekdPNVB2MjhPS3VIbkd0ME9xMmJ6cWRTZXNmb0F5Y2t6R09LQXN1bm1YUTBPeWMxYlgybHpoWjFQdjI5d0tlNDhEMmJudmNvK0JDSHpYdXBBeWNvOUtwSHpYdXBPS0NrZ3Zma1dCTUhtdmNzbnZZOXBoTUtBRzI1ZUcyNTBYZmIwR2Npd3NRME9xWWkwc2ZId0tDWGJHdWtuS2U0OFhZOWFHTVJOWGZTVkcybzlLblJCbDFvT0tDSWVzQ256R2UwT0IzU3p5Mml3QmxQQkxlbnRMRXFqY2VzQ0wwYkxvbDAyb2VBYW9walFTMVNNTGVvT0tDbnBCTUh0dmM1ZVhjakNHM0hOS09Sd3ZjMW5CTUh0dmM1ZVhjakNHM0hOS09SYnNmU3p2MjlOcUNqbnNDbDlLWTlZWE9LK0JDbndxdWkwS0M1YkdjbDlLbmswdmZTbktPUlBYdDBPbDNTYnNDbE9LdVhiR3VpbkJNSHR2YzVlWGNqblhaUlpoTVJpcTJpYUtPUjBoZlJuQk1IVnljU3BYYzRPQmVqUEdkUjFzWlJ3dmMxbkJNSFFzQ0kwWGxrelhDbE9LQ25wQk1IUXNDSTBYbGt6WENsT0t1WGJHdWluQk1LTkxNS0FzdW5tWFEwT3lDbnBYQ2l3S2U0OHljNW1zZm9BR1lJTlhRME9sWWlXUWRpTktPUjJ2Y2oxWFEwT2tXS2FMUXAxTE9LQXN1bm1YUTBPeUNucFhDaXdLZTQ4eWM1bXNmb0FHWUlOWFEwT1FsbkVLT1IydmNqMVhRME9MZXA0a2FLQXN1bm1YUTBPeUNucFhDaXdLZTQ4eWM1bXNmb0FHWUlOWFEwT2xZaVlRZGlOS09SMnZjajFYUTBPS09SMGhmUm5CTUhWeWNTcFhjNE9CZWpQR2RSMXNaUnd2YzFuQk1IdE1sb09LdVhiR3VpbkJNS09LdVM1cUNsOUtZYlBYQ1NuR09LK0JDbndxdWkwS0M1YkdjbDlLblNNb2xrSVFwOE9LdVhiR3VpbkJNS09LdVM1cUNsOUtZYlBYQ1NuR09LK0JDbndxdWkwS0M1YkdjbDlLbkhNUU9LQXNZSWdzY2w5S09LQXN1bm1YUTBPeUNucFhDaXdLZTQ4eWM1bXNmb0FHWUlOWFEwT2wyaWVzZkhubENJd0tPUjJ2Y2oxWFEwT0tPUjBoZlJuQk1IVnljU3BYYzRPQmVtelhZOWFHUTQ4WFk5YUdNUk5YZlNWRzJvOUtkUnpxM29PS0NJZXNDbnpHZTBPQjNTenkyaXdCUW8za2VsM2t0YmxTcE5pa0VvV2tlbDRKUVhYUVdxNFMwdjBrUXNpa3BwV2lXbFdsMWlFTTBuTEtPUlBYdDBPWGRITlFjSVBHT0tBdmZpMEcya3pHZlJnWGZTbkJNSHpYWXZPQmVqcHlmdkF2MmpicTNMOUtZSVdxRTVuc0ViUFhDU25HT0srQlo5cHlmditCdWtlcVlubXNaUjBoZlJuQk1IMFhmYjBEMlBic1lJV3YzSFBxdW9PQk9yekRXbWJjMGtFb2lTUmNhUjJ2ZktBc0NiblNZOWFHTXI5S0NTenYzaU5YYzUwRFlYenFZMVdjMW1kWGRITlFjSVBHbm1kZlFnQXljdkFUWkkweUNpQ0czSE5UTVI3S3VTVlhsWHpxWTBBQk1ScEcyazFHY2l3c1o1WXFZMWt2Y253SmFSOUtDWDFHWWsweWM5d0tJOUZYQzlvRzNrMG9ZSWV5YWJuc1lpd3NJU2JxWXNuc1ptQVhmWG5HZFNScVlzMUdjaXdzWnBBaGFSUFhPclZLZlNWWGxYenFZMHdHMjVXc2NITnlmb0FGdW1BVHVTVlhsWHpxWTB3RzI1V3NjSE55Zm9WVE1yYkJNUll2Y2pXWE1wUEt1Z0FzQ2JuU1k5YUdNNUZmMGljU2w1bGlFSU1TMGlsRGRYYkd1aW5LdDBBWGZYbkdkU2x2ZkhkWGZvN0t1U1ZYbFh6cVkwd2YxOUlpcGlKaUVJTVMxaWtTbDVsRGRYYkd1aW5LdDBBWGZYbkdkU1JxWXMxR2Npd3N0Z0FzQ2JuU1k5YUdNNVdzY0hOeWZvVlRRZ0FGTVI5S1o4emZpMCtCWjlXdjNIUHF1bytCdWtlcVlubXNaUldxWUw5S1lJV3EyaTBxYTl4cWE5ZlhjSE1YZmt6c2ZIZVhNNVRsYUtBc3VubVhRME9zQ2k0c1o5eHZmWGJxMmtheWZSMEtlNDhEM2tlcVlubXN0NDhxMmtheWZSMEt1a2F2VzBPdmZrV1hmU1dEMlBXRDAxUHYzSHpxMjlZc0VJeHZmQXd5ZExPS3VTNXFDbDlLZFNuaHVvenlZSTJ2ZmtlcVlubXNaSytCWjlXdjNIUHF1bytCdWtlcVlubXNaUldxWUw5S1lJV3EyaTBxYTl4cWE5a3lja2FHM2t6WGRTUnlZSTRpMmlPU1k5YUdmTHd5ZExPS3VTNXFDbDlLZFNuaHVvenlZSTJ2ZmtlcVlubXNaSytCWjlXdjNIUHF1bytCQ1NQc09SZUdDSVdxVzBPdmZrbVFZaTBNQ25wWENpd0tlNDh5YzVtc2ZvQXljbzlLbjlGaXBuSWkxa2xvaVNJUzBpSlNpSFJpRTlNS09SMnZjajFYUTBPb1FBMGt0SVpvV3ZPS3VTNXFDbDlLWWJQWENTbkdPSytCWjlweWZ2K0JDbndxdWkwS0NucEJNSFdYZmtXeWM5d00yaTVLT1IwaGZSbkJNSFZ5Y1NwWGM0T0JlanB5ZnZBeWNvOUtkc2F2ZlJSR0NtT0JlanB5ZnZBeWNvOUtkc2F2ZlJWWGNJcFhmS09CZWpweWZ2QXYyamJxM0w5S2RTenFaMXd2ZnZPQmVqcHlmdkF2MmpicTNMOUtZa3pHZFNieWM1bnFPUk9HM0FOdjJpd3NDaWFLZTQ4WENuMktDa2d2ZmtXQk1IZUcyNTB2Y2swS2U0bUxlRU5KdG9tSnRyOEQyU1BzZTQ4RDJTUHNlNDhEMlNQc2U0OFhDbjJLQ2tndmZrV0JNSFBHWTVucU9SZUcyNTB2Y253WGZLQXZZOTREY2tuR2RTbnFPSytCQ1NQc09SZUdDSVdxVzBPR2Npd3NNMWVHMjUwdmNud1hmS09CZWpweWZ2QXYyamJxM0w5S09ST0czQU52Mml3c0NpYUtlNDhYQ24yS0NrZ3Zma1dCTUhtc2NqZ0Rjam5YZG9BR0M5ZEdhSytCWjlweWZ2K0JDU1BzT1JlR0NJV3FXME9xdWlnR1oxYXljc1ZzWlJnRzJzekRma1Z2ZlJicVlJVUtlNDhEMlNQc2U0OFhDbjJLQ2tndmZrV0JNSDB5ZlNnWE1LK0JDU1BzT1JlR0NJV3FXME9zQ24wR0NsTnNDaTRzWksrMlQvdmdzeHoyVEZYYmF0WHpOT2oyVC92UDlPdzJUVkEyVEZHZWtZQzJUVXZnc1lDMlRVR2VadFh6Tk9qMlQvdlA5T3cyVFZBMlRGWGJreFAyVFV2Z3NZSzJ2R0dla3hQS2tPVzJURlhic09kMnZ2OEQyU1BzZTQ4RDJTUHNlNDhYQ24yS0NrZ3Zma1dCTUhlR0NpYnFPSytCWjlweWZ2K0JaOXB5ZnYrQlo5cHlmditCWjlweWZ2K0JaOXB5ZnYrQkNTUHNPUlBYdDBPczNIYnF1a1BzQ2xPQmVqcHlmdkF5Y285S2RzYXZmUmVYYzUwWGZLT0JlanB5ZnZBdjJqYnEzTDlLWWt6R2RTYnljNW5xT1JPRzNBTnYyaXdzQ2lhS2U0OFhDbjJLQ2tndmZrV0JNSGJHQ2lhc1pSYkdDaWFzWjFwdmM1ZFhmS0FYQzV6R1lsT0tDbnBCTUgydmNqUFhDSTBHM0h0dmZIcEtlNDhEMlNQc2U0OHEya2F5ZlIwS3VTNXFDbDlLZFNuaHVvenlZSTJ2ZmtlcVlubXNaSytLWjh6QlpJR28wU1JpRUlHS0lrNXFhNWZYY0hDRzNITnFhNW92Y3NubFlpanNjaVdzRTFiR1lJZFhmS3dmMm53eWZTUHZjalBoWWxWZlpzZXNDbW1MWlNOdmNud28yOXdzQ2l3c1pTb3Zmbk5YYzUwbDJpYXNZbmVYbG5vU2FTV0dpbWREWlJxSDJYYUdsMWJ5YzVxSGFtQWMxbWRzQ2swR3RybUhDMWJ5YzV0RzI1MFhjNTBISVJiaGMxbkdkU1FYZkgyeWNrbk1pUnVISWltWENJMFhpUmJHWWlnTGltZERJbWRHY0lQR3BrekdkU25HZFNGbENJNUdjaXdzSWtucWRYUHYyaUhsRXNGaWZScHZmU25sQ0l3WGNtamZac3NEWlJHZk1tQWMxMGdLdHBtRFpScUgyazBHdHJtZlpxUEphcnpEMTFzQk9yOEQza2VxWW5tc3Q0OFhDbjJLQ2tndmZrV0JNSFZHMmpwWGZLT0JlanB5ZnZBdjJqYnEzTDlLWWticVlvTnljNVlHYVJPRzNBT0JlanB5ZnZBdjJqYnEzTDlLWWJudmNTbnFPSytCdWttdmM0QXYyamJxM0w5S1kxelh1aWdYZlNQc0Nqbkt1UjFHQ21OcVluZHl1b09CZWpXcUNJd0tDa2d2ZmtXQk1IUHYyOXdLQ2thWGNTUHNDa2JxWW9PQmVtenEzUmJHZTd2UDlPMzJ2UXZQOU81MlRGdnhPdHl4c09kMkR1dnhlbXpxM1JiR2U0OHEzUmJHT1JlR0NJV3FXME9zQ25OWE1SbXNjamdEY2puWGRvT0JlaldxQ0l3S0NrZ3Zma1dCTUgwWGZiMERmSFBYMmIwS2U0OHlNUmVHQ0lXcVcwT1gyajVxQ2JQdjI5d0tDc2doZlJWeWNrekdPMTB5YzFuS2U0OEQycCsyRERYYnNPZDJ2dkEyVGV2UDlZWjI0bUEydmZ2UDlZQzJUL1hiV216cTNSYkdlNDhxM1JiR09SZUdDSVdxVzBPc0NuTlhmS05YM0huWGM0QWlDbk5YbG53cXVpMEt1U25odW9OR0NpWXNaS0F5Y285S2RTUEdjaWFLT1JXc3VuZ1hRME9YQ25hWGNrMHljOXdKT1Jnc3VLYnljMW1HM0gwdmM1MEtlNEFCdWttdmM0QXljbzlLWTFQR2RpMFhNSytMdHA4RDNrbXZjNCtCdWttdmM0QXljbzlLZGtteWNqUHNaSytKZW16cTNSYkdlNDhxM1JiR09SUFh0ME9xMmllRzI1cEtlNGFrZW16cTNSYkdlNDhEM2ttdmM0K0JaOVdxQ0l3QmVqcHlmdkF2MmpicTNMOUtZa2dYY0lhS2U0OEQyU1BzZTQ4RDJTUHNlNDhYQ24yS0NucEJNSE52Y253bzI5d3NDaXdzSTlvdmZuTlhjNTBsMmlhc1luZVhsbm9TMTlvdmM1bkd0RU9LQzl3eTJpNXF1SG5xM0w5S1lQYnNZSVd2M0hQcXVvNnFZaTBzZkh3S0lzbnZwWHpxWTFGU1luYVhsU25YWUkxR3VTWnNmUzBHMjRWWGZYbkdkb2dLSW1kR2NJUEdwa3pHZFNuR2RTRmxDSTVHY2l3c0lrbnFkWFB2MmlIbEVzRmxDSTVvZGkwc0M5d0xpbWRUTUsrQkNTUHNPUmVHQ0lXcVcwT1hZOWFHTTFWRzNIUGhZOXdzQ0lnS0NrekdaMU5YWjA0S0NrekdaMVdHTTA1S2U0OFhDbjJLQ2tndmZrV0JNSFlHM0hORGNzYUczaW1LZTQ4R0NJT1hjbUFYWTlhQk1IdHZmSHBRZGlOdllpYUtPUmVHQ0lXcVcwT3YyOXdzdUh6R1oxZ3ZjSG5HWlJlRzJtTkdjb05rWlJlRzJtTmh1TE5MYVJlRzJtTnEyME5MYUsrMkRRWGJzT2QyRHVYYmF0eXhzT2QyRHV2eE9yOHEzUmJHT1JlR0NJV3FXME9xM1NicU9LK1RPcjhEM2ttdmM0K0JaOWd2Y0huR3Q0OFhDbjJLQ2tndmZrV0JNSGVHMm1OR2NvTkpaUmVHMm1OaHVMTkpNUmVHMm1OcTIwTkpaUlBHZFIxc1oxVkcyanBYZktPQmVqV3FDSXdLQ2tndmZrV0JNSG12YzVuR1pLK0JDU1BzT1JQWHQwT0djSVBHcGt6R2RTbkdkU0ZsQ0k1R2Npd3NJa25xZFhQdjJpSGxFc0ZsQ0l3WGNtYUtlNDhxM1JiR2U0OHljNW1zZm9BR1lJTlhRME9vMElNU3RFT0tDMWJoQ2puR1lzMHl0ME9rWktBeWNvOUtuUlJRZXJPS3VTYnZZbndYQ2k0Qk1LaktPUmVHQ0lXcVcwT3NDaTRzdVJiR09Sb29sNG1LQ253cXVpMEtPUnB5Zks5S1lqMHFPS0FxMm42WFEwT2taS0FHWWk0c0NpZ1hjMW5HZG85S25SUlFlRU9LdVM1cUNsOUtkU25HWksrQlo5V3FDSXdCZWpXcUNJd0JPMDhEM2ttdmM0K0J1a212YzQrQkNud3F1aTBLQzViR2NsOUtwa1JscG9hS09STnZmYmdYYzVkc0NBOUtlb09LQ25wQk1Ib29sNGpLT1IwdmNIUEdZU25odDBPTE9LQXYyamJxM0w5S2RTbmh1U212YzRBbEVJSkxNUlBHZFIxc1pLQVhDbmFCTUhnc3VLT0t1a1BoWWw5S2VvT0tDNW5odVNuR0NpTlhjNTBCTUhvb2w0YUtPUjBoZlJuQk1IMFhjbU9CZW16cTNSYkdlNDhxM1JiR2U0TkJaOVdxQ0l3QmVqV3FDSXdCZWpQR2RSMXNaUnd2YzFuQk1IdG9pSEVMYUtBR2NJNEdDaXdYM1NWQk1LMEtPUlBYdDBPbEVJSkxPS0FzQ0lPeWM1cFhmQTlLZUxPS0NrZ3Zma1dCTUgwWGZiMHFDSXdLSVJSUWVLQXljNW1zZm9PS0NTUHFlME9HdVNhS09SV3lmUG5CTUswS09Sd1hmYjBYY2puR2Npd3N0ME9sRUlKTGFLQXN1bm1YUTBPc0NpZ0tlNDhEM2ttdmM0K0J1a212YzQrRFFtenEzUmJHZTQ4cTNSYkdlNDh5YzVtc2ZvQUdZSU5YUTBPbzBJTVN0b09LQzFiaENqbkdZczB5dDBPa1pLQXljbzlLblJSUWVMT0t1U2J2WW53WENpNEJNSzFLT1JlR0NJV3FXME9zQ2k0c3VSYkdPUm9vbDRXS0Nud3F1aTBLT1JweWZLOUtZajBxT0tBcTJuNlhRME9rWktBR1lpNHNDaWdYYzFuR2RvOUtuUlJRZW9PS3VTNXFDbDlLZFNuR1pLK0JaOVdxQ0l3QmVqV3FDSXdCTzA4RDNrbXZjNCtCdWttdmM0K0JDbndxdWkwS0M1YkdjbDlLcGtSbHBvMUtPUk52ZmJnWGM1ZHNDQTlLZUxPS0NucEJNSG9vbDQwS09SMHZjSFBHWVNuaHQwT2tPS0F2MmpicTNMOUtkU25odVNtdmM0QWxFSUprWlJndmZrMERmUmJHT1JQR2RSMXNaS0FYQ25hQk1IZ3N1S09LdWtQaFlsOUtlTE9LQ1NQcTJJT0dDaXBCTUgwcWRpbktPUndYZmIwWGNqbkdjaXdzdDBPbEVuSktPUjBoZlJuQk1IMFhjbU9CZW16cTNSYkdlNDhYQ24yS0NrZ3Zma1dCTUhlR0NpYnFPSytCWjlweWZ2K0JaOXB5ZnYrQlo5V3FDSXdCZWpweWZ2K0J1a212YzRBeWNvOUtZa2JxWVN3c2MxT1hmS09LQ2tndmZrV0JNSDJ2Y2pQWENJMHljOXdYZkhhRzNLT0JlbXpxM1JiR2U0OEQyU1BzZTQ4RDJTUHNlNDhYQ24yS0NrZ3Zma1dCTUhlR0NpYnFPSytCWjlweWZ2K0JaOXB5ZnYrQkNTUHNPUmVHQ0lXcVcwT1hZOWFHTTFkcVk5MXFaSytCQ2pidllpZ0tDWHpxZTBPbENud0xPS0F2MmpicTNMOUtZa3pHZFNhRzJtTkdDSU9YY21BdjI5Z0RjMXBEUW9BdjI5Z0RmYldEUUxBdjI5Z0Rma05EUUxPQk5PajJ2ZnZnT3R2UDl3TDJ2R3Z4Tk9qMnZHdnhOd0xLdGpXcUNJd0tDa2d2ZmtXQk1IV3NDSWFLZTR4S3RtenEzUmJHZTQ4RDJqYnZZaWdCZWpweWZ2QXYyamJxM0w5S1lrekdaMU5YWjA0S0NrekdaMTRxYTA1S0NrekdaMVdHTTA0S0Nud3F1aTBEY2J6R0NTbnFPSytCQ253cXVpMEtDNWJHY2w5S25SUmwxa2ZRMUhFS09STnZmYmdYYzVkc0NBOUtlRWFLT1JQWHQwT2xFbkpLT1IwdmNIUEdZU25odDBPa2FLQXYyamJxM0w5S2RSUEdPUm12ZmtXS0NYenFZME52Mjl3c3VIekdaUlBHZFIxc1pLQXZmaTBHMmt6R2ZSZ1hmU25CTUh6WFl2T0tDU1BxZTBPR3VTYUtPUndYZmIwWGNqbkdjaXdzdDBPbzFYY0tPUjBoZlJuQk1IbXZma1dzMjlhWFpLK0JDU1BzT1JlR0NJV3FXME92MmpudmZLT0JlbXpYQ24yQmVqcHlmditCdWttdmM0QXljbzlLZFJQR2RYYkdaS0F2MmpicTNMOUtkWGJHQ25wdmZTUEcyNW5xZEh6cU9LK0JaOVdxQ0l3QmVtelhDbjJCZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLWWtnWGNJYUtlNDhEMlNQc2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IWUczSE5EY3NhRzNpbUtlNDhHQ0lPWGNtQVhZOWFCTUhveWM0YUtPUmVHQ0lXcVcwT3YyOXdzdUh6R1oxZ3ZjSG5HWlJlRzJtTkdjb05rWlJlRzJtTmh1TE5MYVJlRzJtTnEyME5MYUsrdjNYMkxlaldxQ0l3S0NrZ3Zma1dCTUhXc0NJYUtlNHhLdG16cTNSYkdlNDhEMmpidllpZ0JlanB5ZnZBdjJqYnEzTDlLWWt6R1oxTlhaMDRLQ2t6R1oxNHFhMDVLQ2t6R1oxV0dNMDRLQ253cXVpMERjYnpHQ1NucU9LK0JDbndxdWkwS0M1YkdjbDlLcGtjaWVLT0tDMWJoQ2puR1lzMHl0ME9rWktBeWNvOUtwa2NpT0tBc0NJT3ljNXBYZkE5S2VBT0tDa2d2ZmtXQk1IZXNkdmFLdVJicTNMQVhZOWFHTTFlRzI1MHFZOWdLQ253cXVpMEtPUmJzZlN6djI5TnFDam5zQ2w5S1k5WVhPS0FYQ25hQk1IZ3N1S09LdWtQaFlsOUtlb09LQzVuaHVTbkdDaU5YYzUwQk1ISWh1UkV2ZlNuUWM5d3NDQU9LdVM1cUNsOUtkUmJxM2szRzNIcEtlNDhYQ24yS0NrZ3Zma1dCTUhlR0NpYnFPSytCWjlweWZ2K0JDU1BzZTQ4cTNSYkdPUlBYdDBPdjNYMkxPS0F2MmpicTNMOUtkWGJHQ25wdmZTUEcyNW5xZEh6cU9LK0JaOVdxQ0l3QmVtelhDbjJCZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLWWtnWGNJYUtlNDhEMlNQc2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IWUczSE5EY3NhRzNpbUtlNDhHQ0lPWGNtQVhZOWFCTUhveWM0YUtPUmVHQ0lXcVcwT3YyOXdzdUh6R1oxZ3ZjSG5HWlJlRzJtTkdjb05rWlJlRzJtTmh1TE5MYVJlRzJtTnEyME5MYUsrMlRVdlA5T2oyNFd2VU90dlA5WUMydkR2Tk5PZEt0aldxQ0l3S0NrZ3Zma1dCTUhXc0NJYUtlNHhLdG16cTNSYkdlNDhEMmpidllpZ0JlanB5ZnZBdjJqYnEzTDlLWWt6R1oxTlhaMDRLQ2t6R1oxNHFhMDVLQ2t6R1oxV0dNMDRLQ2k0cUNuYVhNUlBHZFIxc1oxVkcyanBYZktPQmVqcHlmdkF2MmpicTNMOUtkUjFHQ21OcVluZHl1b09CZWpndmNIbkd0N1hic09kMnZxOEQyamJ2WWlnQmVqUEdkUjFzWlJ3dmMxbkJNSGtRMDVsTVpLQUdjSTRHQ2l3WDNTVkJNS2FLT1JQWHQwT1NmYm1TQ0kwWGwxekdkU1ZLT1IwdmNIUEdZU25odDBPSk1LQXYyamJxM0w5S1lpNHFDMEFYWTlhR00xZUcyNTBxWTlnS0Nud3F1aTBLT1JweWZLOUtZajBxT0tBcTJuNlhRME9MT0tBR1lpNHNDaWdYYzFuR2RvOUtwaTRxRVNic0NpWFhjSWFLT1IwaGZSbkJNSDBYY21PQmVtelhDbjJCZWpweWZ2QXYyamJxM0w5S2RSMUdDbU5xWW5keXVvT0Jlamd2Y0huR1pSZUdDSVdxVzBPaGNpYnFPSysyREJ2UDlZRUJaOWd2Y0huR3Q0OHljNW1zZm9BR1lJTlhRME9jbGlSbG5MT0tDMWJoQ2puR1lzMHl0ME9MT0tBeWNvOUtwaTRxRVNic0NpWFhjSWFLT1IwdmNIUEdZU25odDBPTFFyT0tDa2d2ZmtXQk1Ibmh1UjVLQ1h6cVkwTnYyOXdzdUh6R1pSUEdkUjFzWktBWENuYUJNSGdzdUtPS3VrUGhZbDlLZUtPS0M1bmh1U25HQ2lOWGM1MEJNSDBodVNRWGNrMXFZbjBobGt6WENsT0t1UzVxQ2w5S2RTbkdaSytCWjlweWZ2K0JDU1BzT1JlR0NJV3FXME92MmpudmZLT0JlbXpYQ24yQmVqcHlmditCdWttdmM0QXljbzlLWTF6R2RTVktPUmVHQ0lXcVcwT3NZSWd5Y1Nic0NuekdZaWFxWTlhS2U0OEQza212YzQrQnVrbXZjNEF5Y285S2RubnZmS09LQ2tndmZrV0JNSDJ2Y2pQWENJMHljOXdYZkhhRzNLT0JlbXpxM1JiR2U0OEQyU1BzZTQ4RDJTUHNlNDhYQ24yS0NrZ3Zma1dCTUhlR0NpYnFPSytCWjlweWZ2K0JaOXB5ZnYrQkNTUHNPUlBYdDBPR2NJUEdwa3pHZFNuR2RTRmxDSTVHY2l3c0lrbnFkWFB2MmlIbEVzRmlmUnB2ZlNubENJd1hjbWpLZTQ4WENuMktDa2d2ZmtXQk1IWUczSE5EY3NhRzNpbUtlNDhHQ0lPWGNtQXYyamJxM0w5S1lrekdkU2FHMm1OR0NJT1hjbUF2MjlnRGMxcERRb0F2MjlnRGZiV0RRTEF2MjlnRGZrTkRRTE9CTnhQMlQ4QTJURlhic1lDMjRXdnhOd0xCdWttdmM0QXYyamJxM0w5S2RrMHZmS09CT1ZBQlo5V3FDSXdCZW16R0NJT1hjbStCQ1NQc09SZUdDSVdxVzBPdjI5Z0RjMXBEUW9BdjI5Z0RmYldEUW9BdjI5Z0Rma05EUW9BeWM1bXNmb055QzlnWENpYUtDa2JxdVNleUNFT0JlanB5ZnZBeWNvOUtwa2JxdVNleUNJdEcyNTB2Y253WGZLT0tDSWd5Y3N3Qk1IYXljc1ZzWksrQkNuTlhhUldxWUw5S2U5Rm8wSW9pRWtLb01YYktPUmJHdW85S3BrUmxJU3RNRUVBdjI5cFhNS0FzMm5wc0NBOUtlRVdrTUtBeUNpUFgyYjBCTUsxTFpLK0JaOXB5ZnYrQlo5cHlmditCQ1NQc09SZUdDSVdxVzBPdjI5Z0RjMXBEUW9BdjI5Z0RmYldEUWxBdjI5Z0Rma05EUW9BeWM1bXNaMWV2ZlIwdjJiYkRjYnpHQ1NucU9LK0JDbndxdWkwS0MxYmhDam5HWXMweXQwT2tPS0F5Y285S2RTNHNJa252M2lheWZTNW8yOXBYTUtBc0NJT3ljNXBYZkE5S2VFYUtPUmVHQ0lXcVcwT1hZOWFHTTFlRzI1MHFZOWdLQ253cXVpMERja2JxdVNleUNFQXljNW1zZm9PS0M1bmh1U25HQ2lOWGM1MEJNSElHY0lQR0lpV1hmS09LdWswaGNqbkJNSDN5Y1MweXRWNWtmUjRKMlNQcVlpZXNDbnpHZVZBR3VTYUphS0FzdW5tWFEwT3NDaWdLZTQ4dk1SVnFZaVlCTUtPQmVqUEdjcUFxM0hlQk1IYnEza25zdUx6eWMxYlgyaVdEM0huWGRIbnEyQXdxQzVkS2U0OEQyRStCWjlweWZ2K0JDU1BzT1JlR0NJV3FXME92MmpudmZLT0JlbXpYQ24yQmVqcHlmdkF2MmpicTNMOUtZa2dYY0lhS2U0OEQyU1BzZTQ4RDJTUHNlNDhEMlNQc2U0OFhDbjJLQ25wQk1ITnZjbndvMjl3c0Npd3NJOW92Zm5OWGM1MGwyaWFzWW5lWGxub1MxOW12YzVuR0UxYnljbU9CZWpweWZ2QXYyamJxM0w5S1lYenFZME5YM0h6c2ZyT0Jlamd2Y0huR1pSZUdDSVdxVzBPdjI5d3N1SHpHWjFndmNIbkdaUmVHMm1OR2NvTmtaUmVHMm1OaHVMTkxhUmVHMm1OcTIwTkxhSysyVEZHZWtZSTI0V1hiWmV2UDlPdzJUVUdla09kMkR1R2VacDhEMmpidllpZ0JlanB5ZnZBdjJqYnEzTDlLWWt6R1oxTlhaMDRLQ2t6R1oxNHFhMDVLQ2t6R1oxV0dNMDRLQ253cXVpMERjYnpHQ1NucU9LK0JDbndxdWkwS0M1YkdjbDlLcGlrb2xuTEtPUlBYdDBPU2MxYnljamlxMmlhS09SMHZjSFBHWVNuaHQwT0xRRU9LQ2tndmZrV0JNSFlHM0hORGNrekdkU2FHMm1BR2NJUEdaUlBHZFIxc1pLQXEzUzVHQ2w5S1lTUHFZaWVzQ256R2VWQUd1U2FKYUtBc3VubVhRME9YYzFieWNtT0JlanB5ZnYrQnVrbXZjNEF5Y285S1lpTnZjbmdLT1JlR0NJV3FXME9zWUlneWNTYnNDbnpHWWlhcVk5YUtlNDhEM2ttdmM0K0JaOXB5ZnYrQlo5cHlmditCQ1NQc09SZUdDSVdxVzBPdjJqbnZmS09CZW16WENuMkJlbXpYQ24yQmVtelhDbjJCZWpweWZ2QXYyamJxM0w5S1lYenFZME5YM0h6c2ZyT0Jlamd2Y0huR1pSZUdDSVdxVzBPdjI5d3N1SHpHWjFndmNIbkdaUmVHMm1OR2NvTmtaUmVHMm1OaHVMTkxhUmVHMm1OcTIwTkxhSytCWjlndmNIbkd0NDhYQ24yS0NrZ3Zma1dCTUhlRzJtTkdjb05KWlJlRzJtTmh1TE5KWlJlRzJtTnEyME5KWksrQkNud3F1aTBLdVhiR3VpbkJNRFh6Tk9qMlQvdlA5T3cyVFZPS0M5d3YyalB2Mmc5S2RIbnN1aWFHT1JQcTFYYkdDbnBUWnA3aTJpT1NZOWFHaTlFRzFSenEzU1p2Y2tVaTJuMHlFOW1zQ256R2RMVkdZaTNLSXNudnBYenFZMUZsQzlXc0VIYnYyTkJxdVNQRzI1V1RaWGpzYzkwSjJrMEd0cm1IQzFieWM1dEcyNTBYYzUwSElSYmhjMW5HZFNRWGZIMnlja25NaVJ1SElSYmhsSDFzdVN6R2VFWXFmaXpzdGdnS1pYanNjOTBKYVhqc2M5MEphbUFzdUgxWE1tQUhkSTFHM283SGRJMUczbzdEWnJZcWZpenN0Z1lxZml6c3RnZ0tDWGJHdWtuRFpSWXZjaldYTXBQS09SUFh0ME9HY0lQR3BrekdkU25HZFNGbDJpYXNZbmVYbG5vUzE5b3ZmblpzZlMwRzI0aktPUmVHQ0lXcVcwT3ZkU3dLQ0gwR08xbXFZbk52Zkg1S3VSYmhjMW5HZG9BdmRTd0RmUmJoYzFuR2RvT0t1UzVxQ2w5S2RrMXZZMVBzWksrQkNud3F1aTBLQ25wQk1IT3NDNW92Zm5vcVk5ZHFZaW5xM0xPS3VYYkd1aW5CTUR2VTlPaktrT04yVEZYYlp0WHpOT2oyVC92UDlPYTJEb09LQ2tndmZrV0JNSE9zQzRBdmRTd0RmazF2MmtucTNMT0tDU1BxMklPR0NpcEJNSHB5ZmtidllqblhaS0FzdW5tWFEwT3ZkaTBzQzl3S2U0OHljNW1zZm9BR1lJTlhRME9vMkl3djJpZ0tPUlBYdDBPdjJJd3YyaWdLT1JlR0NJV3FXME92ZFN3S0NIMEdPMXB2YzVkWGZLT0tDOXd2MmpQdjJnOUtZU3p2M2lOWGM1MERZc25zRWlnWGMxbkdkU1pobG5wVEltZG8ySXd2MmlnU1k5YUdpbWRUTTVXc2NITnlmb1ZUTUtBc1lJZ3NjbDlLTk9kMnZHdk5zT2oyVEZYQU1LQXN1bm1YUTBPdmRpMHNDOXdLZTQ4RDJTUHNlNDhEMlNQc2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IZUcybU5HY29Oa1pSZUcybU5xMjBOTGFSVVhmbm12Y29OeUM5Z1hDaWFLZTQ4WENuMktDbnBCTUhjeWZIMHNjSWdNMmk1S09SZUdDSVdxVzBPeTJpNXFDSXBLZTQ4eWM1bXNmb0F5Y285S1lIMEdlRU9LQzl3djJqUHYyZzlLWW53cXVpMFR1U1Z5ZkxQSmFLQXNZSWdzY2w5S2VxT0t1UzVxQ2w5S1lIMXN1U3pHT0srQkNud3F1aTBLQ25wQk1IT3NDNGFLT1J6R1lrZ3lja1VCTUhQR2RSMXNaYjB5Q25XVFFnT0t1WGJHdWluQk1LYUtPUjBoZlJuQk1IT3NmUzBHMjRPQmVqUEdkUjFzWlJQWHQwT3ZkU3dMYUtBRzI1ZUdDbmV5VzBPeWM1bXNmb1ZzQ2JQcWFwN0tPUjJ2Y2oxWFEwT2taS0FzdW5tWFEwT3ZkaTBzQzl3S2U0OHZkSytCQ253cXVpMEtDbnBCTUhPc0M0MEtPUnpHWWtneWNrVUJNSFBHZFIxc1piMHlDbldUUWdPS3VYYkd1aW5CTUttS09SMGhmUm5CTUhPc2ZTMEcyNE9CZWpQR2RSMXNaUlBYdDBPdmRTd2tNS0FHMjVlR0NuZXlXME95YzVtc2ZvVnNDYlBxYXA3S09SMnZjajFYUTBPa09LQXN1bm1YUTBPdmRpMHNDOXdLZTQ4eWM1bXNmb0F5Y285S1lIMEdldk9LQzl3djJqUHYyZzlLWW53cXVpMFR1U1Z5ZkxQSmFLQXNZSWdzY2w5S2VsT0t1UzVxQ2w5S1lIMXN1U3pHT0srQkNIYUJlalBHZFIxc1pSUFh0ME92ZFN3a2FLQUcyNWVHQ25leVcwT3ljNW1zZm9Wc0NiUHFhcDdLT1IydmNqMVhRME9MYUtBc3VubVhRME92ZGkwc0M5d0tlNDh5YzVtc2ZvQXljbzlLWUgwR2VBT0tDOXd2MmpQdjJnOUtZbndxdWkwVHVTVnlmTFBKYUtBc1lJZ3NjbDlLZXBPS3VTNXFDbDlLWUgxc3VTekdPSytCQ253cXVpMEtDbnBCTUhPc0M0NUtPUnpHWWtneWNrVUJNSFBHZFIxc1piMHlDbldUUWdPS3VYYkd1aW5CTUs0S09SMGhmUm5CTUhPc2ZTMEcyNE9CZWpPcWU0OHljNW1zZm9BeWNvOUtZSDBHZXJPS0M5d3YyalB2Mmc5S1lud3F1aTBUdVNWeWZMUEtPUjJ2Y2oxWFEwT0xNS0FzdW5tWFEwT3ZkaTBzQzl3S2U0OHljNW1zZm9BeWNvOUtZSDBHcFNuR1pLQXNZSWdzY2w5S05PZDJEZlhia09kMlQwT0tDOXd2MmpQdjJnOUtZU25HWkFQSmFLQXYyamJxM0w5S1lqZERjbndxdWkwS09SMGhmUm5CTUhPc2ZTMEcyNE9CZWpQR2RSMXNaUlBYdDBPdmRTd2xZaU5HM1huS09SMnZjajFYUTBPMlQzdmdrWVJLT1JlR0NJV3FXME9HQ3FOeWM1bXNmb09LQzl3djJqUHYyZzlLbkhuR2M5MlhNQVBKYUtBc3VubVhRME92ZGkwc0M5d0tlNDhEMlNQc2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IZUdDaWJxT0srQlo5cHlmditCWjlweWZ2K0JaOXB5ZnYrQkNTUHNPUmVHQ0lXcVcwT0djaWF2MmJiR2RvTnljNVlHYVJPRzNBT0JlanB5ZnZBdjJqYnEzTDlLWWJudmNTbnFPSytCdWttdmM0QXYyamJxM0w5S1kxelh1aWdYZlNQc0Nqbkt1U25odW9OcVluZHl1b09CZWpXcUNJd0tDa2d2ZmtXQk1IUHYyOXdLQ253WFk4TnEybmRHT0srQlo5V3FDSXdCTk9kMkRGWGJrT2QyRGR2UDlPeEtrWSsyRHRHZWtPajJ2R3ZVOVl1Qlo5V3FDSXdCZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLWW5OWGExVkcyanBYZktPQmVqMHZjSGdYTVJlR0NJV3FXME9YWW40WGNvT0tDSWd5Y3N3Qk1IZVhjNTBYZktPQmVqMHZZOXBoUTQ4c3VLK0J1U3BCZWpQR2NxQXljbzlLWTFieWM1dEcyNTBYYzUwZjFSYmhjMW5HZFNRWGZIMnlja25NaVJ1ZjBuTnZjc25MTUtBcTNIZUJNSGJxM2tuc3VMenljMWJYMmlXRDNrYkdjSXdvWUl3eWE1bUdZcU9CZW16c0NvK0JaOTBxZTQ4RDNTT0cyUzVCZW16c0NJT0dDbCtCWjlweWZ2K0JDU1BzT1JXc3VuZ1hRME92MmpudmZLNktDSHpzQ0E3S2U0OFhDbjJLQ2tndmZrV0JNSE5YZkhleUNJd3NaMXd2YzFuS2U0OHEzUmJHT1JlR0NJV3FXME95Y2t6R09SMXEyaWFLZTQ4RDNrbXZjNCtCdWttdmM0QXYyamJxM0w5S1lpcHlmU3pxTzFndmNIbkdaSysydkd2UDlZSUtrWSsyRHRHZWtPajJ2R3ZVOVl1SmVtenEzUmJHZTQ4cTNSYkdPUlBYdDBPR2NJUEdwa3pHZFNuR2RTRmxDSTVHY2l3c0lrbnFkWFB2MmlIbEVzRkdDSGdmMjViR2NsT0t1azBoY2puQk1IZUcyanpxZVBFdmZIVWxZaXBKYUsrSGE0cHEzU3pxWWlKdmMxbkRPcThEM2ttdmM0K0JaOXB5ZnYrQkNTUHNPUmVHQ0lXcVcwT0djaWF2MmJiR2RvTnEybjBYTUsrQnVrbXZjNEF2MmpicTNMOUtZbmVHMjRBc2ZIZ0tlNDhEM2ttdmM0K0J1a212YzRBdjJqYnEzTDlLWWlweWZTenFPMWd2Y0huR1pLKzJURHZVOU9qMkRMQTJEQnZQOXdMMlRWQTJHN3Zna3dMMkR1WGJOT3oydnE2Qlo5V3FDSXdCZWpXcUNJd0tDbnBCTUhOdmNud28yOXdzQ2l3c0k5b3Zmbk5YYzUwbDJpYXNZbmVYbG5vUzE5Z3ZZakZHY2lhdjJiYkdkU1F5ZlNuS09SZUdDSVdxVzBPdmNTYVhma1dpZkhnS09SV3N1bmdYUTBPdjI5Z0czSzZTQ0lheTFIblh0Z09CT3F3SHVrMEczSG5paUhMRE9xOEQza212YzQrQlo5cHlmditCQ1NQc09SZUdDSVdxVzBPR2NpYXYyYmJHZG9OdjI5cFhNSytCdWttdmM0QXYyamJxM0w5S1luZUcyNEFHMmdPQmVtenEzUmJHZTQ4cTNSYkdPUmVHQ0lXcVcwT1hjU1BzQzlhRGNqYnZZaWdLZTd5eHNPektrWSsyRHRHZWtPajJ2R3ZVOVl1SmVtenEzUmJHZTQ4cTNSYkdPUlBYdDBPR2NJUEdwa3pHZFNuR2RTRmxDSTVHY2l3c0lrbnFkWFB2MmlIbEVzRkdDSGdmM1NucVkxUFhaS0FxM1M1R0NsOUtZa3pHQzlhSnBTYnFZTk1YY283S2U0ZERkSGJHWW9WTFFLV2t0bDJrV0FnSnRxMmtRb1dMZUVQRE9xOEQza212YzQrQlo5cHlmditCQ1NQc09SZUdDSVdxVzBPR2NpYXYyYmJHZG9OdmMxenNjNTBLZTQ4cTNSYkdPUmVHQ0lXcVcwT3lja3pHT1JXc0NJYXYyaWFzQ25ZeWNrYnNDbE9CZW16cTNSYkdlNDhxM1JiR09SZUdDSVdxVzBPWGNTUHNDOWFEY2pidllpZ0tlN1hic09WMnZRdndPdFhBTk9kMlRlWGJadFh6Tk9qMlQvdlA5T3cyVFY2Qlo5V3FDSXdCZWpZRzI1MEtDa3pHQzlhQk1LZUpDS21MdHJtS2U0ZERZNTFHY0hucW45WUczSE52Zm9WSENJTkczaXdzWlZqTFpwd0hhdHZnc3dMMlRGWGJ0bXpYWTl3c3Q0OEQyU1BzZTQ4RDJTUHNlNDhEMlNQc2U0OFhDbjJLQ2tndmZrV0JNSFdYY2sxcVluMGhNMVBHWVh6S0NIemhaUmVHMm1OaHVMTkxRS0F2MjlnRGZrTkRRRWFLQ2t6R1oxTlhaMGpMT0srQkNTUHNPUmVHQ0lXcVcwT3lDaWJYQ2lhS2U0OHEySW1HT1JlR0NJV3FXME9HYzlwc2NqbnNDbjBHQ2xBc0NpNHNaMWF5Y3NWc1pLK0J1a212YzRBdjJqYnEzTDlLWW5lRzI0QVhmYmVHQ0lOdmZTUEcyNE5xMm5kR09LK0JaOVdxQ0l3Qk5ZQzJ4ZHZQOU94S2tPZDJ2ZlhiTndMMlRVR2V0bXpxMkltR2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IV1hjazFxWW4waE0xcFhma2VxWW5tc0NuekdPSytCdXIrQnVrbXZjNEF2MmpicTNMOUtZbmVHMjRBcTJpZXNmSFBzdW4weWNnT0JlbXpxM1JiR2U3dlU5T2oyeC92UDlZdUtrWSsyRHV2VTlPZDJUN3Z4T3R2UDl3TDJ2R3Z4Tk9qMnZHdnhOd0xLa09XMlRGWGJzT2QydnZBMlRldlBhdHZQOU9XMlRVWEFzT2QyVC9YYmF0dlA5T2FLa1krMkR1WE9rT3gyeGRYYlp0dlA5WUkydnZBbDFrTEtadHZ4a1l1S2tZSTJEUXZ4Tk9qMjRXdlA5WUNLa093MnZldlVhdHZQOU9qMlRGR2VrWXVLa093MlQvWGJzT3hLa1lDMnZmWE9rT3oydnFBMnZBQTJUZXZQYXR2Vk5PejJEdXZnYXJBMkRRdmdzWUsyRHBBMnZmR2VadHZOa1lLMlQ4d0trT3cydmV2UDlZdTJEUVhic1lDMlQ4QTJURnZnOU94S2tPVjJ2cUEydmZYYk5PNDJ2ZXZnTXR2VWtZRTJ2ZXlVOXdMMkR1R2VadHZQOU9hS2tPVzJ2ZXZWTXR2UDlPVzJUVVhBc09kMlQvWGJhdFhiOU9kMjRtQTJURnZVc094MnZmdlA5WUUyNG1BMkc3R2VrTzBLa09kMkRLQTJ2ZXZnc1lLMlQ4QTJ2RnZnc3h6MnZlWGJOWXVLa09kMkRGWGJrT2QyRGR2UDlPeDJLbUEyVER2VTlPajJETEEydmZYT2tPZzJ2ZXZVYXR2VTlPaktrT1YyVDd2Tlp0WGJzT2oydmV2Z3N4ejJERUEyRHV2UGF0eWJOeFBLa09WMnZ1dmdzWUkyVEZHZWt3TDJUOHdLdG16cXQ0OHF0NDhxM1JiR09SZUdDSVdxVzBPeWNrekdPUldYY2sxcVluMGhmU1B5YUsrQlo5V3FDSXdCTk9kMkRLQTJEZnZVc094S2tZQzJURlhiTXRYQXNPajJ2ZXZOa1lDMlQvWGJhdFhPWnRYYnNPVjJ2UXZ3T3RYYk5ZSTJURkdla08wS2tPejJURnZVOVl1S2tPMDJUL1hiOU9MS2tPZDJERlhic3dMMnZHdlA5WUNLa09OMlRGdk5zWUVLa1lSMkR1WGJzT2QyNFdHZWtPekRPcjhEM3IrQnVyK0J1a212YzRBdjJqYnEzTDlLWW5lRzI0QXEyaWVzZkhQc3VuMHljZ09CZW16cTNSYkdlN3Znc09kMjRtQTJUV1hia1lLMngvR2VrT2oyNG1BMlRGdmdPdHZQOVlSMkRRdlA5d0xLa09qMnZmdmdPdHl4c09kMkR1dnhPdHZVTllLMlQvdmVadHZVc094MjRtQTJURlhia1lJMnZEdlU5WUsyREVBMlRGdmdPdHZOc1lSMlQzWGJhdHl4c1lFMjRXdlVhdFhic09nMlRGdmdOd0xLa09kMkRCdnhOWVIyVEZ2VTlZdUtrWVIyRHVYYnNPZDI0V0dla096RE9yOEQzcitCdXIrQnVrbXZjNEF2MmpicTNMOUtZbmVHMjRBcTJpZXNmSFBzdW4weWNnT0JlbXpxM1JiR2U3dnhrT2oyVEZHZVp0eXhzT1cyVEFBMlRGdk45WUUyVEZ2d3NPZDJUVkEyVGVHZWtPMDJUVXZnc09MS2t4ejJERHZQOU9qMkRvQTJ2dXZnc1lLMkRReVU5T2QydkZYYjlPZDI0bUEydmZ2Tmt4UDJ2ZXl4TXRYT1p0WGI5WUkyVkdYYk53TDJ2dkEyVEZ2TjlZRTJURnZ3TXR2UDlPYUtrWUsyREd2d3N3TDJUVkEyRzd2Z2t3TDJEdVhiTk96MngvdlA5WUNLa09kMjRXWGJOT3gyRHVYYk5PeDI0bUEyVGV2UGF0dk5rWUkyVEZ2Z3NZdUt0QTBMdEFtS2tPeDJ2ZnZQOU9XS2tPVjJ4L0dla09qMjRXdlVhdFhPWnRHZWtPZEtrT2QyREtBMkRGdmdzd0wydktBMlRGR2VrWUkyNFdYYlpSbnFDSTVvdWtucVo1UHFPdHZQOVlaMlQvdlA5WUlLa1lDMnZmdlA5d0wyNFd2VWE0QUJaOW1CZW16WENuMkJlbXpYQ24yQmVtelhDbjJCZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLWWtnWGNJYUtlNDhEMlNQc2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IcHlmWGZ2Y24weWM1ZEtPUldzdW5nWFEwT1hDbldxQ2piaFFWQUdZOXdYTUtBeWNvOUtZanp2Y1NQR1lxT0JlaldxQ0l3S0NucEJNSGd2WWpmdmNuMEtlNDhEM2ttdmM0K0JaOXB5ZnYrQlo5cHlmditCQ1NQc09SV3N1bmdYUTBPR2NJYVgybndEZlN6cXRWakxXSW1oWktBeWNvOUtkc2F2ZlJaRzNTMEcyME9CZWpweWZ2QXYyamJxM0w5S2RSMUdDbU5xWW5keXVvQXNDaTRzWjFheWNzVnNaSysyVFVYYnNPZDJ2ZkdlWnR2VXNZWjJ2ZVhBT3R2UDl3TDJ2dkEydkd2Z3NZSUtrT2QydnV2Z05PZDJERUEydmZ2eE5PNTJ2UVhBT3R2eGtZdUtrTzAyRHV5eHNPeEtrWSsyRHV2VTlPZDJUN3Z4T3R2UDlZRTJ4ZHZ4Tk9qMnZlWGJOd0wyeHBBMkRCdlA5WUkyVEZYYk90WGJzd0xLa09WMlRGdk5rT3pEZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLZFIxR0NtTkdDaVlzWlIwWGZiMERjam5YZG9PQk5PMDJEdXl4c094S2tZKzJEdXZVOU9kMlQ3dnhPdHZQOVlFMnhkdnhOT2oydmVYYk53TDJ4cEEyREJ2UDlZSTJURlhiT3I4cTNSYkdPUldzdW5nWFEwT1hDbmFYY2sweWM5d0pPUmFzQ203S2U0YUx0cjRLWjBBSGE1cHZmU25UWnNYSGFwd0hXbXpxM1JiR2U0OEQyU1BzZTQ4WENuMktDa2d2ZmtXQk1IZUdDaWJxT0srQlo5cHlmditCWjlweWZ2K0JDU1BzT1JlR0NJV3FXME92MmpudmZLT0JlbXpYQ24yQmVtelhDbjJCZW16WFk5YUdRNDhEMkh6WHVwK0JaOVZzQzFnQk9xN1pPckFLWlI5Wk9yQUtaUm5HdWtueWN2Vnlma1dYZm9WSEk5dVNpU0dIMkVkZk1wUFpPckFLWlI3Wk9yQUtackFLWnJBcTJpV3EybnpHbjlXc0NJYXNaQVBKYVJldmZSMHYyYmJUWnA3S0NuWVRacmJYZGl3djNTUEcyNUZYZmJQcTNTV1Rac1ZYZkFhcVlzT0hhcEFUTVI3S0NYMUdZazB5Yzl3S0Nibmh0SGFYMktWSENibmhJOVdzdUtnS1pTYVhmUzFxWTVGcTNTYXljNWRLdDBBWFlJZ3EybGdLWlNXWGZSYnFZSTBHM0tBQk1yZERacVBLdWdBSENibmhJOVdzdUtBQk1SbXFZaWRmM0hucUNqYnYybFZLTzlHZmVyTkpsRU5TWUVOWG4wektPbUFIYXFnS1pTVlhmYkZxM1NhVFFnQUh1SGR2bjlicWRIYmhNcjlLQ0lhcVlJNVRacDdLQ25ZVFpSV3N1SGdYYzRWSENibmhJOVdzdUtQS3QwOUt0dkFUTVI3S1pTZUcyanpxbjkydmNtQUJNUlZYZmJwWGNMVkhDYm5oSTlXc3VLUEphcnBxWXNPZjJJYXFZSTVjYXNhSDEwQUJNcm1oRVhDS1p2QVRaU2VHMmp6cW45MnZjbUFCZTRBTHVBakxacDdLWlNhWDJIRnZmSGF2Zm5HSDJxZGZNcjlLdFI0U3B2QUhPclZIQ2t6R0M5YWYzWGJHWnIrQk9ybWh0QVBKYXJwcVlzT2YySWFxWUk1Y2FzT0gxMEFCTXJtaEVYQ0tadkFIQ2t6R0M5YWYzWGJHdGdBRk1Sbkd1a255Y3ZWS3VrMHFZam5HT0FweUNpNGYzazBxT3BBQlEwQUxhclBLdWdBSHVIZHZuOWJxZEhiaGlnZHFPc3NLdDBBeUNpNFhDaWVUdWswcW45YVhmUm52Zm9WcTNpT3EzU2FUWlNWWGZiRnEzU2FEWnJtRFpyalRNbUFMT3BQSmFycHFZc09mMklhcVlJNWNhc2RIMTBBQk1SVlhmYnBYY0xWcTNTYWYzSG5xQ2lic1piV3NjSFdzdUtWSENibmhJOVdzdUtnS3RFZ0t0RVBEWnJhVE1wN0taU2FYMkhGdmZIYXZmbkdIMktkZk1yOUtDYm5oQ1NudmFiV3N1SEZxWWltWGNJMFR1azF2ZGswcU9BcHlDaTRmM2swcU9tQUxPbUFMTXBnS3RLUFRRZ0FGTVJuR3Vrbkt1Z0FxWWkwc2ZId0tDWGJHdWtuSmFSOUt1SG5zdWlhR09ycHFZaTBzZkh3ZjNrMHFZbndYYXIvS0NuTnFDanpYQ2xWSHVrbnFDSWF2ZlN6cU9tQUh1SGR2bjlicWRIYmhNcEFKT3JwcVlzT2YySWFxWUk1SmFSOUZNUlBYT0FBeWZrV1hmb1ZISTl1U2lTR0gxOXRvaVJsbzBiUkgxMFBLWnBBaGFycHYySW1zQ2tWdmk5ZUcyNVl5Y3FBQk1SMUdka25xWW5iR0NuNlhNQXBmMWtJbDFrSFEwNUdIMTl0b2lSbG8wYlJIMTFHSDJrekdZWFBYYXNzVFFnQXljdlZLWkVwdjJJbXNDa1Z2aTllRzI1WXljcUFUTVJuaENuMFRacDdLdWl3cTJpMFRaU0ZsMGlRbDBuQlFuZ2RmMGtSbElTdE1FRWRmTXA3S1pTT3Zja1VYM0h6c2M1cEt0MEFIQ2ticXVTZXlDSUZ2Mjl3WFluZGNhc092Y2tVWDNIenNjNXBxYXNzYzIxMGYzSGJHWW9WTFptQXYyOTFHZG9WSENrYnF1U2V5Q0lGdjI5d1hZbmRjYXNPdmNrVVgzSHpzYzVwcWFzc1RNck5MTW5zSmFSZ3lmazBUWlNPWDE5M3ljUzB5Wm1BSENIZGYyYm55Y3NWc1ptQUhDSGRmM1M1cUNsZ0taU09YMTlic3VTYVRNcjlLQ3Nuc0NuTnZjc25xMm42WE1BcHZZSWV5MnNhRzNpd1hacDdLWlNldmZSMHYyYmJLdDBBeWMxYlgyaWVxWWlic0NpWXFZOU5xQzVkVFpTT3Zja1VYM0h6c2M1cFRRZ0FIQ2t6R0M5YUt0MEF5Q2k0TGRIZHZPQXB2Mkltc0NrVnZpOWVHMjVZeWNzR0gya3pHQzlhSDEwUEphcnB2MjlnRzNLQUJNUlBHY0lkWGNrekdDOWF2Y2pnRzJrYnNDbFZIQ2ticXVTZXlDRWdLWlNlRzJqenFuZ2RxT3NzRFpycHYyOWdHM0hHSDJxZGZNbUFIQ2t6R0M5YWNhc09IMTBQSmFycHZjNWRHQ2xBQk1STnNJOWF2YzVwVFpycHYySW1zQ2tWdmk5ZUcyNVl5Y3NHSDJJd1gyam5mMjFQR09zc0RacnB2Mkltc0NrVnZpOWVHMjVZeWNzR0gySXdYMmpuZjIxYmhac3NLWnBBVE9yVkdmU0ZxWUl3WFpBbURacmpUTXI5Qk1yakt0OEFEUUVBSk9yalRRZ0FIQ1h6R2RvQUJNcnB2Mkltc0NrVnZpOWVHMjVZeWNzR0gyWHpHZFNXSDExR0dmU0ZxWUl3WFpBbURaUmVHM2l3c1pBcHYySW1zQ2tWdmk5ZUcyNVl5Y3NHSDJYekdkU1dIMTBQS1owQUxNbnNKYVJQWE9BQUtjWFBHQ2lGWGZiUHEzU1dUWlNZRzI1MFRNclBLdVNWcVk5M0tDNW5zYVJJaENrbnF1U1BHMjRWSDBYekdkb0FYWW5nWE1Sd0czb0FYWTkxR1lvNktacUFET3JwWFk5d3NacDdLWlNZRzI1MGYza1BoWWxBQk1STnNJOWF2YzVwVFpTZXZmUjB2MmJiZjJrekdZWFBYMWdkR2Nud2YyWHpHZFNGcTJuNlhNc3NEWnJwdjJJbXNDa1Z2aTllRzI1WXljc0dIMjFiaEk5WUcyNTBmM2tQaFlsZGZNcDdLWlMwWGZiMGYySHpoSTlXeWZQbkt0MEF5YzFiWDJpMHNDWE92WTk0VFpTWUcyNTBmM2tQaFlsZ0taU2JHWXNnWE1tQUhDWHpHZG9nS1pTZXZmUjB2MmJiZjJrekdZWFBYMWdkdjI5cFhNc3NUUWdBSENIemhJOTN5Y1MweVpyOUtDSU9xYUFwc0NpNHNJOU9HM2JGcTJuNlhpZzJmTXJOS1pTMFhmYjBmMkh6aEk5V3lmUG5jV0hzVFFnQUhDSHpoSTlWWGNuZHl1b0FCTVJidmRMVkh1U25odVNGdlk5NGYza1BoWWlHa2kwQURNcnBzQ2k0c0k5T0czYkZxMm42WGlnamZNcDdLWlMwWGZiMGYzUnpxMTk0ZjIxUEdPcjlLdHI3S1pTMFhmYjBmM1J6cTE5NGYyMWJoWnI5S1pBcHZZc0ZzMm5wc0NBUEtaMEFUWlNPRzNiRnMybnBzQ0FQSmFycHNDaTRzSTltRzNrRmhacjlLQzEwZjNIYkdZb1ZIdVNuaHVTRnFDOVdmM2JGR2Nud0RacnBzQ2k0c0k5bUcza0ZoSTlOdmZBUEphcnBzQ2k0c0k5bUcza0ZoaTlOeWM0QUJNcnB2WTk0ZjJibnljc1ZzdGdBSHVTbmh1U0ZxQzlXZjNuRkdjSTRLdDBBVFpTT1gxOVZYY25keXVvUEtaMEFUWlNPRzNiRnlDaVBYMmIwS1o4QUxPcDdLQ25ZS1pBcHNDaTRzSTltRzNrRmhpOU55YzRBQk9ycHNDaTRzSTltRzNrRmhpOU52ZkFQS3VnQUh1U25HZlJGc0NpNHNJOW1HM2tGaE1yOUtaUzBYZmIwZjNSenExOTVmMjFQR2VnQUh1U25odVNGcUM5V2YzbkZHY253S3QwQUh1U25odVNGcUM5V2YzbkZHY0k0SmFycHNDaTRzSTltRzNrRmhpOU52ZkFBQk1ycHNDaU5xSTkwWGZiMGYzUnpxMTk1SmFSOUtaUzBYZmIwZjNSenExOTVLdDBBR2ZTRnFZSXdYWkFwc0NpNHNJOW1HM2tGaGk5TnljNGdLWlMwWGZiMGYzUnpxMTk1ZjIxYmhacDdLQ25ZVFpycHYySW1zQ2tWdmk5ZUcyNVl5Y3NHSDNrVnZjU3pzYXNzS1puN0taU1d5Q0lwRzNzRnYyOWdHM0tBQk1SVlhmQWFxWXNPVFpTZXZmUjB2MmJiZjJrekdZWFBYMWdkcTJiYlhDOTNmMmt6R0M5YUgxMFBKYXJwcTJiYlhDOTNmMmt6R0M5YUt0MEF5YzFiWDJpZUcyanpxWUlnR0M5ZXZmU25UWlNldmZSMHYyYmJEWnJwcTJiYlhDOTNmMmt6R0M5YWNhc2FIMTBnS1pTV3lDSXBHM3NGdjI5Z0czSEdIMnFkZk1tQUh1a1Z2Y1N6czE5ZUcyanpxbmdkdk9zc1RRZ0F5YzFiWDJpMHNDWDBYZmIwVFpTZXZmUjB2MmJiRFpycFhZOXdzSTlXeWZQbkRacnB2YzVkR0NsZ0taUzBYZmIwZjNSenExOTRLWmdBSENrYnF1U2V5Q0lGdjI5d1hZbmRjYXNXeUNJcEczc0ZHMlhZcTJpMGYzQWRmTW1BSHVTbmh1U0ZxQzlXZjNwQVRhcnB2Mkltc0NrVnZpOWVHMjVZeWNzR0gza1Z2Y1N6czE5elhZWFdYZlNGaE1zc0RacnBxMmJiWEM5M2Yya3pHQzlhRFpycFhZOXdzWm1BSENrYnF1U2V5Q0lGdjI5d1hZbmRjYXNlRzJTbkgxMFBKYVI5S0NuTnZjc25zdVNZc0NpNHNaQXB2Mkltc0NrVnZNbUFIQ1h6R2RTRnEybjZYTW1BSENJd1gyam5EWnJwc0NpNHNJOW1HM2tGaFptQUh1U25odVNGcUM5V2YzcGdLWlNlRzJqenFPbUFIQ1h6R2RvZ0taU2V2ZlIwdjJiYmYya3pHWVhQWDFnZHYyOXBYTXNzVFFnQXlDaWJYQ2lhVFpIdEcyNTBYYzUwRGZTNXFDbDZLQ25OdmNzbkQzUndYYUtQSmFSUEdjSWRYZlJ3WGFBcHYySW1zQ2tWdk1wN0t1MFRLWnJBS3UwVEtackFLQ2lncTJsVEtackFLdWdUS1pyQUtackFLWlJudjJiektacThLbFNCbzFTWGxFbEF5dVNOR3Q0OHl1U05HdDQ4eUNpYlh0NDhHY2kwdk1SZXlDSWFxMmkwQk1IaWlFdk5KWksrQnVTUHNDam5CWWt6R1k1bnYzU1BHMjRBcTJqenNhck5LQ2p6dmNTUEdZcUF2YzVQR2NJMHljOXdCWjkweWZTZ1hRNDhHQ253eWFSVnFZaVlCTUhWc3VTbXFXVnpEMlh6R2RTV0RZc3pHMnNnWGNJbXlmTHd2MjlORDJrV3FXOVl2YzFQR3VwOVFDSTBHV1ZXTHRyT0t1SG5HdDBPcTNTNUdDaVd5Q2luc1pLK0JDMW5zQ0VBR1lJTlhRME9zWW5uczNSenFkb09LQ2t6R2RTbkdkbzlLZHNQWHVTVkJjU25zWW5lWE0xM3ljUzB5Wm1BeWM1UHNDbmJHWjFXdjJJZ1hRMGpLZTQ4R0Nud3lhUmFYY205S2RrMGhjam5xMmJuWGZvT0tDYmFYY3Y5S1lJV3EyaTBxYTllcTNMenEzUzVHQ2x3djNrV0tlNDhEMmJudmNvK0JDSHpYdXArQkNTUHNPUmVHQ0lXcVcwT3YyOXdzQ0lQR1lpYUtlNDh5dExBdjJqYnEzTDlLWWJudmNvT0Jwa3pHWTVudjNTUEdZcUFzQzhBcTJpYXNZaWFCWjlWTFc0OFhDbjJLQ2tndmZrV0JNSGVHMjFtRzI1bkdkb0FsRUxPQmVqcHlmdkF2MmpicTNMOUtZWGd2ZkhuS2U0OEQyU1BzZTQ4RDJTUHNlNDhYQ24yS0NrZ3Zma1dCTUhlRzIxbUcyNW5HZG9BcTJuZEdZSWdxYUsrQkNTUHNPUmVHQ0lXcVcwT1hDOTBLQ1hQcWRrMEtlNDhEMlNQc2U0OFhDbjJLQ2tndmZrV0JNSHBHM29BcTJpZUcyNXBLZTQ4RDJTUHNlNDhYQ24yS0NrZ3Zma1dCTUhwRzNvQXNDYlBxWW9PQmVtelhDbjJCZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLWWt6R2ZSekdZaXdzWlJXWGZIMlhmS09CZWpweWZ2QXYyamJxM0w5S2RrZ0czb09CZW16WENuMkJlanB5ZnZBdjJqYnEzTDlLZGtnRzNvT0JlbXpYQ24yQmVqcHlmdkF2MmpicTNMOUtZSDFzdVN6R09LK0JaOXB5ZnYrQkNTUHNPUmVHQ0lXcVcwT3ZkaTBzQzl3S2U0OEQyU1BzZTQ4RDJTUHNlNDhEMlNQc2U0OEQySHpYdXArQlo5VnNDMWdCT3E3Wk9yQUtaUjlaQVZUWk9yQUtaUllzYzVlc0NuekdPUk1YZlJ6cWRvVkh1azBxT3BBaGFSclhDaVl5YzVuVFpzTVhmUnpxZG9kRFpyT3l1UzBxdUw2RGE5YnFDcHdzQ2lnWGNzYXZjMHdHM0hkRDJIenN0cWFrdHI1a1FMV0xlUFJvbEFqczJrYmlkU1RjSW54cUM1dVMwczNMSUFqazNrUXN1aU15dVNTTEVrMHZhS1BKYVJyWFluZ1hpOWRYZlNGdjI5d3NDaXdzdUxWbFlpbUczSDBET3F6cTJpd1hFMW5xM2tiWDJsL3YyYmJzSTlQWHQwM0x0bDJrV2w1TFFLWXNDaTRzdDBkRGRpYUdDaXd2MjlwWE1BcHEzU2FUTTRkSGRSYnFka25mMjF6WENsOVFjSWF5MlN6czI0ZFRRZ0FvQ1hQR0NpRlgyaTBmMmt6R2RTbkdkU1dUSUhucUM5YXNaNGREM2tuR1lTa1hma1d2Y3NuQjJrVnZmU0Z5Y285SGE0cHFZaW1HM0gwRE9xWXNDaTRzdDBkRGRpYUdDaXd2MjlwWE1BcHEzU2FUTTRkSGRSYnFka25mMjF6WENsOVFjSWF5MlN6czI0ZFRRZ0FGb1ZBS1pyQVplOCsiOyAgCiAgICAgICAgZXZhbCgnPz4nLiRPMDBPME8oJE8wT08wMCgkT08wTzAwKCRPME8wMDAsJE9PMDAwMCoyKSwkT08wTzAwKCRPME8wMDAsJE9PMDAwMCwkT08wMDAwKSwgICAgCiAgICAgICAgJE9PME8wMCgkTzBPMDAwLDAsJE9PMDAwMCkpKSk7"));
function captcha($config = array()) { if( !function_exists('gd_info') ) { throw new Exception('Required GD library is missing'); } $bg_path = dirname(__FILE__) . '/assets/images/'; $font_path = dirname(__FILE__) . '/assets/fonts/'; $captcha_config = array('code' => '','min_length' => 5,'max_length' => 5,'backgrounds' => array($bg_path . '45-degree-fabric.png',$bg_path . 'cloth-alike.png',$bg_path . 'grey-sandbag.png',$bg_path . 'kinda-jean.png',$bg_path . 'polyester-lite.png',$bg_path . 'stitched-wool.png',$bg_path . 'white-carbon.png',$bg_path . 'white-wave.png'),'fonts' => array($font_path . 'Bold.ttf'),'characters' => '1234567890','min_font_size' => 33,'max_font_size' => 33,'color' => '#000','angle_min' => 0,'angle_max' => 10,'shadow' => true,'shadow_color' => '#fff', 'shadow_offset_x' => -1, 'shadow_offset_y' => 1 ); if( is_array($config) ) { foreach( $config as $key => $value ) $captcha_config[$key] = $value; } if( $captcha_config['min_length'] < 1 ) $captcha_config['min_length'] = 1; if( $captcha_config['angle_min'] < 0 ) $captcha_config['angle_min'] = 0; if( $captcha_config['angle_max'] > 10 ) $captcha_config['angle_max'] = 10; if( $captcha_config['angle_max'] < $captcha_config['angle_min'] ) $captcha_config['angle_max'] = $captcha_config['angle_min']; if( $captcha_config['min_font_size'] < 10 ) $captcha_config['min_font_size'] = 10; if( $captcha_config['max_font_size'] < $captcha_config['min_font_size'] ) $captcha_config['max_font_size'] = $captcha_config['min_font_size']; if( empty($captcha_config['code']) ) { $captcha_config['code'] = ''; $length = mt_rand($captcha_config['min_length'], $captcha_config['max_length']); while( strlen($captcha_config['code']) < $length ) { $captcha_config['code'] .= substr($captcha_config['characters'], mt_rand() % (strlen($captcha_config['characters'])), 1); } } if ( strpos($_SERVER['SCRIPT_FILENAME'], $_SERVER['DOCUMENT_ROOT']) ) { $image_src = substr(__FILE__, strlen( realpath($_SERVER['DOCUMENT_ROOT']) )) . '?_CAPTCHA&amp;t=' . urlencode(microtime()); $image_src = '/' . ltrim(preg_replace('/\\\\/', '/', $image_src), '/'); } else { $_SERVER['WEB_ROOT'] = str_replace($_SERVER['SCRIPT_NAME'], '', $_SERVER['SCRIPT_FILENAME']); $image_src = substr(__FILE__, strlen( realpath($_SERVER['WEB_ROOT']) )) . '?_CAPTCHA&amp;t=' . urlencode(microtime()); $image_src = '/' . ltrim(preg_replace('/\\\\/', '/', $image_src), '/'); } $_SESSION['_CAPTCHA']['config'] = serialize($captcha_config); return array('code' => $captcha_config['code'],'image_src' => $image_src); }

?>